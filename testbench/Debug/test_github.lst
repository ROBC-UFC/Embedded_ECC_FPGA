
test_github.elf:     file format elf32-littlearm
test_github.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20000191

Program Header:
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000ee0 memsz 0x00010000 flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .vector_table   00000190  20000000  20000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .boot_code      00000320  20000190  20000190  00010190  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text           00000a30  200004b0  200004b0  000104b0  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data           00000000  20000ee0  20000ee0  00010ee0  2**4  CONTENTS, ALLOC, LOAD, DATA
  4 .bss            00000070  20000ee0  20000ee0  00010ee0  2**4  ALLOC
  5 .heap           0000e0b0  20000f50  20000f50  00010ee0  2**4  ALLOC
  6 .stack          00001000  2000f000  2000f000  00010ee0  2**4  ALLOC
  7 .debug_aranges  000001b8  00000000  00000000  00010ee0  2**3  CONTENTS, READONLY, DEBUGGING
  8 .debug_info     0000363e  00000000  00000000  00011098  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev   0000091a  00000000  00000000  000146d6  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_line     000019eb  00000000  00000000  00014ff0  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame    00000628  00000000  00000000  000169dc  2**2  CONTENTS, READONLY, DEBUGGING
 12 .debug_str      0000e875  00000000  00000000  00017004  2**0  CONTENTS, READONLY, DEBUGGING
 13 .ARM.attributes 00000029  00000000  00000000  00025879  2**0  CONTENTS, READONLY
 14 .debug_ranges   000001c0  00000000  00000000  000258a2  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro    00000741  00000000  00000000  00025a62  2**0  CONTENTS, READONLY, DEBUGGING
 16 .comment        00000066  00000000  00000000  000261a3  2**0  CONTENTS, READONLY
SYMBOL TABLE:
20000000 l    d  .vector_table	00000000 .vector_table
20000190 l    d  .boot_code	00000000 .boot_code
200004b0 l    d  .text	00000000 .text
20000ee0 l    d  .data	00000000 .data
20000ee0 l    d  .bss	00000000 .bss
20000f50 l    d  .heap	00000000 .heap
2000f000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 ./firmware/CMSIS/startup_gcc/startup_m2sxxx.o
20000190 l       .boot_code	00000000 _start
20000456 l       .boot_code	00000000 SF2_MDDR_MODE_CR
20000452 l       .boot_code	00000000 SF2_EDAC_CR
200001b0 l       .boot_code	00000000 check_esram_edac
200001b8 l       .boot_code	00000000 check_stack_init
200001ca l       .boot_code	00000000 system_init
200001be l       .boot_code	00000000 clear_stack
20000436 l       .boot_code	00000000 RAM_INIT_PATTERN
20000308 l       .boot_code	00000000 fill_memory
200001f2 l       .boot_code	00000000 remap_memory
2000044a l       .boot_code	00000000 SF2_DDRB_NB_SIZE
2000044e l       .boot_code	00000000 SF2_DDRB_CR
20000212 l       .boot_code	00000000 check_esram_remap
2000043e l       .boot_code	00000000 SF2_ESRAM_CR
20000446 l       .boot_code	00000000 SF2_ENVM_REMAP_CR
20000442 l       .boot_code	00000000 SF2_DDR_CR
20000228 l       .boot_code	00000000 check_mirrored_nvm
20000242 l       .boot_code	00000000 copy_data
20000298 l       .boot_code	00000000 block_copy
20000238 l       .boot_code	00000000 copy_text
2000024c l       .boot_code	00000000 clear_bss
20000258 l       .boot_code	00000000 clear_heap
20000280 l       .boot_code	00000000 call_glob_ctor
2000043a l       .boot_code	00000000 HEAP_INIT_PATTERN
2000028a l       .boot_code	00000000 branch_to_main
20000296 l       .boot_code	00000000 ExitLoop
200002ec l       .boot_code	00000000 block_copy_exit
200002a8 l       .boot_code	00000000 block_copy_address_ok
200002b8 l       .boot_code	00000000 block_copy_continue
200002b2 l       .boot_code	00000000 block_copy_byte_copy
200002f0 l       .boot_code	00000000 block_copy_byte
200002c2 l       .boot_code	00000000 block_copy_loop
200002da l       .boot_code	00000000 copy_spare_bytes
200002f6 l       .boot_code	00000000 block_copy_byte_loop
2000037c l       .boot_code	00000000 fill_memory_exit
2000033e l       .boot_code	00000000 fill_memory_end_start
2000032a l       .boot_code	00000000 fill_memory_spare_bytes_start
20000362 l       .boot_code	00000000 fill_memory_spare_bytes_end
20000354 l       .boot_code	00000000 fill_memory_loop
20000366 l       .boot_code	00000000 fill_memory_spare_end_loop
00000000 l    df *ABS*	00000000 crtstuff.c
20000ebc l     O .text	00000000 __EH_FRAME_BEGIN__
200004b0 l     F .text	00000000 __do_global_dtors_aux
20000ee0 l     O .bss	00000000 completed.8911
20000ed8 l     O .text	00000000 __do_global_dtors_aux_fini_array_entry
200004d4 l     F .text	00000000 frame_dummy
20000ee4 l     O .bss	00000000 object.8916
20000ed4 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 mss_comblk.c
20000efc l     O .bss	00000001 g_comblk_cmd_opcode
20000f00 l     O .bss	00000004 g_comblk_p_cmd
20000f04 l     O .bss	00000002 g_comblk_cmd_size
20000f08 l     O .bss	00000004 g_comblk_p_data
20000f0c l     O .bss	00000004 g_comblk_data_size
20000f10 l     O .bss	00000004 g_comblk_p_response
20000f14 l     O .bss	00000002 g_comblk_response_size
20000f16 l     O .bss	00000002 g_comblk_response_idx
20000f18 l     O .bss	00000004 g_comblk_completion_handler
20000f1c l     O .bss	00000004 g_comblk_page_handler
20000f20 l     O .bss	00000001 g_request_in_progress
20000f21 l     O .bss	00000001 g_comblk_state
20000f24 l     O .bss	00000004 g_async_event_handler
20000938 l     F .text	0000004c abort_current_cmd
20000984 l     F .text	00000060 fill_tx_fifo
200006e8 l     F .text	00000210 handle_rx_okay_irq
20000538 l     F .text	000001b0 handle_tx_okay_irq
200008f8 l     F .text	00000040 complete_request
200009e4 l     F .text	00000028 process_sys_ctrl_command
00000000 l    df *ABS*	00000000 mss_hpdma.c
20000f28 l     O .bss	00000018 g_transfer
20000f40 l     O .bss	00000004 g_hpdma_end_desc
20000f44 l     O .bss	00000004 g_hpdma_current_desc
20000a0c l     F .text	00000154 start_transfer
00000000 l    df *ABS*	00000000 system_m2sxxx.c
20000dc4 l     F .text	00000022 silicon_workarounds
20000d7c l     F .text	00000048 get_silicon_revision
20000de8 l     F .text	00000030 m2s050_rev_a_workarounds
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 c:/microchip/softconsole-v2021.1/arm-none-eabi-gcc/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/crti.o
00000000 l    df *ABS*	00000000 c:/microchip/softconsole-v2021.1/arm-none-eabi-gcc/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/crtn.o
00000000 l    df *ABS*	00000000 
20000ed8 l       .text	00000000 __init_array_end
20000ed4 l       .text	00000000 __preinit_array_end
20000ed4 l       .text	00000000 __init_array_start
20000ed4 l       .text	00000000 __preinit_array_start
2000038a  w    F .boot_code	00000000 DebugMon_Handler
20000398  w    F .boot_code	00000000 I2C0_IRQHandler
200003ec  w    F .boot_code	00000000 FabricIrq12_IRQHandler
20000000 g       *ABS*	00000000 __vector_table_load
20000380  w    F .boot_code	00000000 HardFault_Handler
20000ee0 g       *ABS*	00000000 __data_load
2000038e  w    F .boot_code	00000000 SysTick_Handler
20000ee0 g       *ABS*	00000000 _sidata
2000038c  w    F .boot_code	00000000 PendSV_Handler
2000037e  w    F .boot_code	00000000 NMI_Handler
20000ee0 g       .text	00000000 __exidx_end
2000039e  w    F .boot_code	00000000 I2C1_IRQHandler
200003a6  w    F .boot_code	00000000 UART1_IRQHandler
200003fe  w    F .boot_code	00000000 GPIO5_IRQHandler
20000ee0 g       .text	00000000 _etext
20000ee0 g       .bss	00000000 _sbss
200003be  w    F .boot_code	00000000 PLL_LockLost_IRQHandler
200004b0 g       .text	00000000 __text_start
20000430  w    F .boot_code	00000000 GPIO30_IRQHandler
200003a4  w    F .boot_code	00000000 UART0_IRQHandler
200003cc  w    F .boot_code	00000000 MDDR_IOCalib_IRQHandler
2000040c  w    F .boot_code	00000000 GPIO12_IRQHandler
2000042c  w    F .boot_code	00000000 GPIO28_IRQHandler
20000424  w    F .boot_code	00000000 GPIO24_IRQHandler
2000039a  w    F .boot_code	00000000 I2C0_SMBAlert_IRQHandler
20000190 g       .vector_table	00000000 _evector_table
20000386  w    F .boot_code	00000000 UsageFault_Handler
200003b2  w    F .boot_code	00000000 ENVM0_IRQHandler
20000400  w    F .boot_code	00000000 GPIO6_IRQHandler
00010000 g       *ABS*	00000000 RAM_SIZE
20000ee0 g       .bss	00000000 __bss_start__
00000000 g       *ABS*	00000000 __DYNAMIC
20000ee0 g       .data	00000000 _sdata
20000396  w    F .boot_code	00000000 SPI1_IRQHandler
20000426  w    F .boot_code	00000000 GPIO25_IRQHandler
200003f2  w    F .boot_code	00000000 FabricIrq15_IRQHandler
200003f6  w    F .boot_code	00000000 GPIO1_IRQHandler
200003b0  w    F .boot_code	00000000 CAN_IRQHandler
200003e8  w    F .boot_code	00000000 FabricIrq10_IRQHandler
20000b60 g     F .text	000000f8 HPDMA_Complete_IRQHandler
20000416  w    F .boot_code	00000000 GPIO17_IRQHandler
20000ee0 g       .text	00000000 __exidx_start
00001000 g       *ABS*	00000000 MAIN_STACK_SIZE
20000e74 g     F .text	00000048 __libc_init_array
20000406  w    F .boot_code	00000000 GPIO9_IRQHandler
200003c0  w    F .boot_code	00000000 CommSwitchError_IRQHandler
20000422  w    F .boot_code	00000000 GPIO23_IRQHandler
20000ebc g     F .text	00000000 _init
2000042e  w    F .boot_code	00000000 GPIO29_IRQHandler
200003d8  w    F .boot_code	00000000 FabricIrq2_IRQHandler
20000f50 g       .bss	00000000 _ebss
20000418  w    F .boot_code	00000000 GPIO18_IRQHandler
20000190 g     F .boot_code	00000000 Reset_Handler
20000000 g       .vector_table	00000000 __vector_table_vma_base_address
200003a0  w    F .boot_code	00000000 I2C1_SMBAlert_IRQHandler
2000040a  w    F .boot_code	00000000 GPIO11_IRQHandler
20000c58 g     F .text	00000104 HPDMA_Error_IRQHandler
00001000 g       *ABS*	00000000 MIN_SIZE_HEAP
00000000 g       *ABS*	00000000 __smartfusion2_memory_remap
20000390  w    F .boot_code	00000000 WdogWakeup_IRQHandler
200003ba  w    F .boot_code	00000000 USB_DMA_IRQHandler
200003ae  w    F .boot_code	00000000 Timer2_IRQHandler
200003f8  w    F .boot_code	00000000 GPIO2_IRQHandler
20000f50 g       .bss	00000000 __bss_end__
200003ea  w    F .boot_code	00000000 FabricIrq11_IRQHandler
20000f50 g       .bss	00000000 __end
200003d4  w    F .boot_code	00000000 FabricIrq0_IRQHandler
200003bc  w    F .boot_code	00000000 PLL_Lock_IRQHandler
200003a8  w    F .boot_code	00000000 EthernetMAC_IRQHandler
200003c4  w    F .boot_code	00000000 DDR_IRQHandler
00000000 g       *ABS*	00000000 __mirrored_nvm
200003b8  w    F .boot_code	00000000 USB_IRQHandler
200003ac  w    F .boot_code	00000000 Timer1_IRQHandler
20000000 g       .vector_table	00000000 __vector_table_start
200003fa  w    F .boot_code	00000000 GPIO3_IRQHandler
200003da  w    F .boot_code	00000000 FabricIrq3_IRQHandler
20000000 g       *ABS*	00000000 RAM_START_ADDRESS
20000382  w    F .boot_code	00000000 MemManage_Handler
20000e18 g     F .text	0000005c main
20000388  w    F .boot_code	00000000 SVC_Handler
20010000 g       *ABS*	00000000 __main_stack_start
200004b0 g       *ABS*	00000000 __text_load
20000f50 g       .heap	00000000 __heap_start__
20000402  w    F .boot_code	00000000 GPIO7_IRQHandler
2000040e  w    F .boot_code	00000000 GPIO13_IRQHandler
20000d5c g     F .text	00000020 SystemInit
20000ec8 g     F .text	00000000 _fini
200003e2  w    F .boot_code	00000000 FabricIrq7_IRQHandler
20000410  w    F .boot_code	00000000 GPIO14_IRQHandler
200003d2  w    F .boot_code	00000000 FIC64_IRQHandler
20000434  w    F .boot_code	00000000 mscc_post_hw_cfg_init
200003b4  w    F .boot_code	00000000 ENVM1_IRQHandler
200003c2  w    F .boot_code	00000000 CacheError_IRQHandler
200003e0  w    F .boot_code	00000000 FabricIrq6_IRQHandler
2000041a  w    F .boot_code	00000000 GPIO19_IRQHandler
20000404  w    F .boot_code	00000000 GPIO8_IRQHandler
200003e6  w    F .boot_code	00000000 FabricIrq9_IRQHandler
20000428  w    F .boot_code	00000000 GPIO26_IRQHandler
20000420  w    F .boot_code	00000000 GPIO22_IRQHandler
20010000 g       .stack	00000000 _estack
2000f000 g       .heap	00000000 _eheap
20000408  w    F .boot_code	00000000 GPIO10_IRQHandler
2000039c  w    F .boot_code	00000000 I2C0_SMBus_IRQHandler
20000ee0 g       .data	00000000 _edata
20000394  w    F .boot_code	00000000 SPI0_IRQHandler
20000f50 g       .bss	00000000 _end
2000041c  w    F .boot_code	00000000 GPIO20_IRQHandler
200003d6  w    F .boot_code	00000000 FabricIrq1_IRQHandler
200003dc  w    F .boot_code	00000000 FabricIrq4_IRQHandler
200003f4  w    F .boot_code	00000000 GPIO0_IRQHandler
200003e4  w    F .boot_code	00000000 FabricIrq8_IRQHandler
20000000 g     O .vector_table	00000000 g_pfnVectors
200003aa  w    F .boot_code	00000000 DMA_IRQHandler
200003ee  w    F .boot_code	00000000 FabricIrq13_IRQHandler
200003ce  w    F .boot_code	00000000 FAB_PLL_Lock_IRQHandler
20000384  w    F .boot_code	00000000 BusFault_Handler
20000392  w    F .boot_code	00000000 RTC_Wakeup_IRQHandler
20000ee0 g       .data	00000000 __data_start
2000041e  w    F .boot_code	00000000 GPIO21_IRQHandler
20000432  w    F .boot_code	00000000 GPIO31_IRQHandler
200003de  w    F .boot_code	00000000 FabricIrq5_IRQHandler
2000f000 g       .stack	00000000 __stack_start__
200003ca  w    F .boot_code	00000000 ECC_Error_IRQHandler
200004f0 g     F .text	00000048 ComBlk_IRQHandler
200003d0  w    F .boot_code	00000000 FAB_PLL_LockLost_IRQHandler
200003f0  w    F .boot_code	00000000 FabricIrq14_IRQHandler
200003a2  w    F .boot_code	00000000 I2C1_SMBus_IRQHandler
20000414  w    F .boot_code	00000000 GPIO16_IRQHandler
200003fc  w    F .boot_code	00000000 GPIO4_IRQHandler
2000042a  w    F .boot_code	00000000 GPIO27_IRQHandler
20000412  w    F .boot_code	00000000 GPIO15_IRQHandler



Disassembly of section .vector_table:

20000000 <__vector_table_start>:
__vector_table_start():
20000000:	20010000 	.word	0x20010000
20000004:	20000191 	.word	0x20000191
20000008:	2000037f 	.word	0x2000037f
2000000c:	20000381 	.word	0x20000381
20000010:	20000383 	.word	0x20000383
20000014:	20000385 	.word	0x20000385
20000018:	20000387 	.word	0x20000387
	...
2000002c:	20000389 	.word	0x20000389
20000030:	2000038b 	.word	0x2000038b
20000034:	00000000 	.word	0x00000000
20000038:	2000038d 	.word	0x2000038d
2000003c:	2000038f 	.word	0x2000038f
20000040:	20000391 	.word	0x20000391
20000044:	20000393 	.word	0x20000393
20000048:	20000395 	.word	0x20000395
2000004c:	20000397 	.word	0x20000397
20000050:	20000399 	.word	0x20000399
20000054:	2000039b 	.word	0x2000039b
20000058:	2000039d 	.word	0x2000039d
2000005c:	2000039f 	.word	0x2000039f
20000060:	200003a1 	.word	0x200003a1
20000064:	200003a3 	.word	0x200003a3
20000068:	200003a5 	.word	0x200003a5
2000006c:	200003a7 	.word	0x200003a7
20000070:	200003a9 	.word	0x200003a9
20000074:	200003ab 	.word	0x200003ab
20000078:	200003ad 	.word	0x200003ad
2000007c:	200003af 	.word	0x200003af
20000080:	200003b1 	.word	0x200003b1
20000084:	200003b3 	.word	0x200003b3
20000088:	200003b5 	.word	0x200003b5
2000008c:	200004f1 	.word	0x200004f1
20000090:	200003b9 	.word	0x200003b9
20000094:	200003bb 	.word	0x200003bb
20000098:	200003bd 	.word	0x200003bd
2000009c:	200003bf 	.word	0x200003bf
200000a0:	200003c1 	.word	0x200003c1
200000a4:	200003c3 	.word	0x200003c3
200000a8:	200003c5 	.word	0x200003c5
200000ac:	20000b61 	.word	0x20000b61
200000b0:	20000c59 	.word	0x20000c59
200000b4:	200003cb 	.word	0x200003cb
200000b8:	200003cd 	.word	0x200003cd
200000bc:	200003cf 	.word	0x200003cf
200000c0:	200003d1 	.word	0x200003d1
200000c4:	200003d3 	.word	0x200003d3
200000c8:	200003d5 	.word	0x200003d5
200000cc:	200003d7 	.word	0x200003d7
200000d0:	200003d9 	.word	0x200003d9
200000d4:	200003db 	.word	0x200003db
200000d8:	200003dd 	.word	0x200003dd
200000dc:	200003df 	.word	0x200003df
200000e0:	200003e1 	.word	0x200003e1
200000e4:	200003e3 	.word	0x200003e3
200000e8:	200003e5 	.word	0x200003e5
200000ec:	200003e7 	.word	0x200003e7
200000f0:	200003e9 	.word	0x200003e9
200000f4:	200003eb 	.word	0x200003eb
200000f8:	200003ed 	.word	0x200003ed
200000fc:	200003ef 	.word	0x200003ef
20000100:	200003f1 	.word	0x200003f1
20000104:	200003f3 	.word	0x200003f3
20000108:	200003f5 	.word	0x200003f5
2000010c:	200003f7 	.word	0x200003f7
20000110:	200003f9 	.word	0x200003f9
20000114:	200003fb 	.word	0x200003fb
20000118:	200003fd 	.word	0x200003fd
2000011c:	200003ff 	.word	0x200003ff
20000120:	20000401 	.word	0x20000401
20000124:	20000403 	.word	0x20000403
20000128:	20000405 	.word	0x20000405
2000012c:	20000407 	.word	0x20000407
20000130:	20000409 	.word	0x20000409
20000134:	2000040b 	.word	0x2000040b
20000138:	2000040d 	.word	0x2000040d
2000013c:	2000040f 	.word	0x2000040f
20000140:	20000411 	.word	0x20000411
20000144:	20000413 	.word	0x20000413
20000148:	20000415 	.word	0x20000415
2000014c:	20000417 	.word	0x20000417
20000150:	20000419 	.word	0x20000419
20000154:	2000041b 	.word	0x2000041b
20000158:	2000041d 	.word	0x2000041d
2000015c:	2000041f 	.word	0x2000041f
20000160:	20000421 	.word	0x20000421
20000164:	20000423 	.word	0x20000423
20000168:	20000425 	.word	0x20000425
2000016c:	20000427 	.word	0x20000427
20000170:	20000429 	.word	0x20000429
20000174:	2000042b 	.word	0x2000042b
20000178:	2000042d 	.word	0x2000042d
2000017c:	2000042f 	.word	0x2000042f
20000180:	20000431 	.word	0x20000431
20000184:	20000433 	.word	0x20000433
	...

Disassembly of section .boot_code:

20000190 <Reset_Handler>:
Reset_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:150
 * cannot be located in MDDR since MDDR is not available at this point.
 * The bits of the content of register r11 have the following meaning:
 *  reg11[0]: eSRAM EDAC enabled
 *  reg11[1]: MDDR ECC/SECDED enabled
 */
    mov r11, #0
20000190:	f04f 0b00 	mov.w	fp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:151
    ldr r0, SF2_MDDR_MODE_CR
20000194:	f8df 02be 	ldr.w	r0, [pc, #702]	; 20000456 <SF2_MDDR_MODE_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:152
    ldr r0, [r0]
20000198:	6800      	ldr	r0, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:153
    ldr r1, SF2_EDAC_CR
2000019a:	f8df 12b6 	ldr.w	r1, [pc, #694]	; 20000452 <SF2_EDAC_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:154
    ldr r1, [r1]
2000019e:	6809      	ldr	r1, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:155
    and r1, r1, #3
200001a0:	f001 0103 	and.w	r1, r1, #3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:156
    and r0, r0, #0x1C
200001a4:	f000 001c 	and.w	r0, r0, #28
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:157
    cmp r0, #0x14
200001a8:	2814      	cmp	r0, #20
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:158
    bne check_esram_edac
200001aa:	d101      	bne.n	200001b0 <check_esram_edac>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:159
    orr r11, r11, #2
200001ac:	f04b 0b02 	orr.w	fp, fp, #2

200001b0 <check_esram_edac>:
check_esram_edac():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:161
check_esram_edac:
    cmp r1, #0
200001b0:	2900      	cmp	r1, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:162
    beq check_stack_init
200001b2:	d001      	beq.n	200001b8 <check_stack_init>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:163
    orr r11, r11, #1
200001b4:	f04b 0b01 	orr.w	fp, fp, #1

200001b8 <check_stack_init>:
check_stack_init():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:165
check_stack_init:
    cmp r11, #0
200001b8:	f1bb 0f00 	cmp.w	fp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:166
    beq system_init
200001bc:	d005      	beq.n	200001ca <system_init>

200001be <clear_stack>:
clear_stack():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:168
clear_stack:
    ldr r0, = __stack_start__
200001be:	48a7      	ldr	r0, [pc, #668]	; (2000045c <SF2_MDDR_MODE_CR+0x6>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:169
    ldr r1, =_estack
200001c0:	49a7      	ldr	r1, [pc, #668]	; (20000460 <SF2_MDDR_MODE_CR+0xa>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:170
    ldr r2, RAM_INIT_PATTERN
200001c2:	f8df 2272 	ldr.w	r2, [pc, #626]	; 20000436 <RAM_INIT_PATTERN>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:171
    bl fill_memory                      /* ; fill_memory takes r0 - r2 as arguments uses r4, r5, r6, r7, r8, r9, and does not preserve contents */
200001c6:	f000 f89f 	bl	20000308 <fill_memory>

200001ca <system_init>:
system_init():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:177
    
/*------------------------------------------------------------------------------
 * Call CMSIS system init function.
 */
 system_init:
    ldr r0, =SystemInit
200001ca:	48a6      	ldr	r0, [pc, #664]	; (20000464 <SF2_MDDR_MODE_CR+0xe>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:178
    blx r0
200001cc:	4780      	blx	r0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:184

/*------------------------------------------------------------------------------
 * Modify MDDR configuration if ECC/SECDED is enabled for MDDR.
 * Enable write combining on MDDR bridge, disable non-bufferable regions.
 */
    and r10, r11, 0x2
200001ce:	f00b 0a02 	and.w	sl, fp, #2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:185
    cmp r10, #0
200001d2:	f1ba 0f00 	cmp.w	sl, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:186
    beq remap_memory
200001d6:	d00c      	beq.n	200001f2 <remap_memory>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:187
    ldr r0, SF2_DDRB_NB_SIZE
200001d8:	f8df 026e 	ldr.w	r0, [pc, #622]	; 2000044a <SF2_DDRB_NB_SIZE>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:188
    ldr r1, SF2_DDRB_CR
200001dc:	f8df 126e 	ldr.w	r1, [pc, #622]	; 2000044e <SF2_DDRB_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:189
    ldr r2, [r0]
200001e0:	6802      	ldr	r2, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:190
    ldr r3, [r1]
200001e2:	680b      	ldr	r3, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:191
    push {r0, r1, r2, r3}
200001e4:	b40f      	push	{r0, r1, r2, r3}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:192
    mov r2, #0
200001e6:	f04f 0200 	mov.w	r2, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:193
    mov r3, #0xFF
200001ea:	f04f 03ff 	mov.w	r3, #255	; 0xff
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:194
    str r2, [r0]
200001ee:	6002      	str	r2, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:195
    str r3, [r1]
200001f0:	600b      	str	r3, [r1, #0]

200001f2 <remap_memory>:
remap_memory():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:202
/*------------------------------------------------------------------------------
 * Perform memory remapping based on the value of __smartfusion2_memory_remap
 * set in the linker script.
 */
remap_memory:
    ldr r0, =__smartfusion2_memory_remap
200001f2:	489d      	ldr	r0, [pc, #628]	; (20000468 <SF2_MDDR_MODE_CR+0x12>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:203
    ldr r2, =0
200001f4:	f04f 0200 	mov.w	r2, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:204
    ldr r3, =1
200001f8:	f04f 0301 	mov.w	r3, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:205
    cmp r0, #2
200001fc:	2802      	cmp	r0, #2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:206
    bne check_esram_remap
200001fe:	d108      	bne.n	20000212 <check_esram_remap>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:210
    /*
     * Remap external RAM to address 0x00000000
     */
    ldr r1, SF2_ESRAM_CR
20000200:	f8df 123a 	ldr.w	r1, [pc, #570]	; 2000043e <SF2_ESRAM_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:211
    str r2, [r1]
20000204:	600a      	str	r2, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:212
    ldr r1, SF2_ENVM_REMAP_CR
20000206:	f8df 123e 	ldr.w	r1, [pc, #574]	; 20000446 <SF2_ENVM_REMAP_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:213
    str r2, [r1]
2000020a:	600a      	str	r2, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:214
    ldr r1, SF2_DDR_CR
2000020c:	f8df 1232 	ldr.w	r1, [pc, #562]	; 20000442 <SF2_DDR_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:215
    str r3, [r1]
20000210:	600b      	str	r3, [r1, #0]

20000212 <check_esram_remap>:
check_esram_remap():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:217
check_esram_remap:
    cmp r0, #1
20000212:	2801      	cmp	r0, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:218
    bne check_mirrored_nvm
20000214:	d108      	bne.n	20000228 <check_mirrored_nvm>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:222
    /*
     * Remap internal eSRAM to address 0x00000000
     */
    ldr r1, SF2_DDR_CR
20000216:	f8df 122a 	ldr.w	r1, [pc, #554]	; 20000442 <SF2_DDR_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:223
    str r2, [r1]
2000021a:	600a      	str	r2, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:224
    ldr r1, SF2_ENVM_REMAP_CR
2000021c:	f8df 1226 	ldr.w	r1, [pc, #550]	; 20000446 <SF2_ENVM_REMAP_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:225
    str r2, [r1]
20000220:	600a      	str	r2, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:226
    ldr r1, SF2_ESRAM_CR
20000222:	f8df 121a 	ldr.w	r1, [pc, #538]	; 2000043e <SF2_ESRAM_CR>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:227
    str r3, [r1]
20000226:	600b      	str	r3, [r1, #0]

20000228 <check_mirrored_nvm>:
check_mirrored_nvm():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:236
 * This is done for debugging executables running out of eNVM with SoftConsole.
 * The .text section should not be copied in this case since both the LMA and
 * VMA point at the eNVM despite the LMA and VMa having different values.
 */
 check_mirrored_nvm:
    ldr r0, =__mirrored_nvm
20000228:	4890      	ldr	r0, [pc, #576]	; (2000046c <SF2_MDDR_MODE_CR+0x16>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:237
    cmp r0, #0
2000022a:	2800      	cmp	r0, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:238
    bne copy_data
2000022c:	d109      	bne.n	20000242 <copy_data>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:243
    
/*------------------------------------------------------------------------------
 * Copy vector table.
 */
    ldr r0, =__vector_table_load
2000022e:	4890      	ldr	r0, [pc, #576]	; (20000470 <SF2_MDDR_MODE_CR+0x1a>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:244
    ldr r1, =__vector_table_start
20000230:	4990      	ldr	r1, [pc, #576]	; (20000474 <SF2_MDDR_MODE_CR+0x1e>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:245
    ldr r2, =_evector_table
20000232:	4a91      	ldr	r2, [pc, #580]	; (20000478 <SF2_MDDR_MODE_CR+0x22>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:246
    bl block_copy
20000234:	f000 f830 	bl	20000298 <block_copy>

20000238 <copy_text>:
copy_text():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:252
    
/*------------------------------------------------------------------------------
 * Copy code section.
 */
copy_text:
    ldr r0, =__text_load
20000238:	4890      	ldr	r0, [pc, #576]	; (2000047c <SF2_MDDR_MODE_CR+0x26>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:253
    ldr r1, =__text_start
2000023a:	4991      	ldr	r1, [pc, #580]	; (20000480 <SF2_MDDR_MODE_CR+0x2a>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:254
    ldr r2, =_etext
2000023c:	4a91      	ldr	r2, [pc, #580]	; (20000484 <SF2_MDDR_MODE_CR+0x2e>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:255
    bl block_copy
2000023e:	f000 f82b 	bl	20000298 <block_copy>

20000242 <copy_data>:
copy_data():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:262
/*------------------------------------------------------------------------------
 * Copy data section.
 */

 copy_data:
    ldr r0, =__data_load
20000242:	4891      	ldr	r0, [pc, #580]	; (20000488 <SF2_MDDR_MODE_CR+0x32>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:263
    ldr r1, =__data_start
20000244:	4991      	ldr	r1, [pc, #580]	; (2000048c <SF2_MDDR_MODE_CR+0x36>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:264
    ldr r2, =_edata
20000246:	4a92      	ldr	r2, [pc, #584]	; (20000490 <SF2_MDDR_MODE_CR+0x3a>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:265
    bl block_copy
20000248:	f000 f826 	bl	20000298 <block_copy>

2000024c <clear_bss>:
clear_bss():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:271
    
/*------------------------------------------------------------------------------
 *  Clear .bss
 */
clear_bss:                               
    ldr r0, =__bss_start__
2000024c:	4891      	ldr	r0, [pc, #580]	; (20000494 <SF2_MDDR_MODE_CR+0x3e>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:272
    ldr r1, =__bss_end__
2000024e:	4992      	ldr	r1, [pc, #584]	; (20000498 <SF2_MDDR_MODE_CR+0x42>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:273
    ldr r2, RAM_INIT_PATTERN
20000250:	f8df 21e2 	ldr.w	r2, [pc, #482]	; 20000436 <RAM_INIT_PATTERN>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:274
    bl fill_memory                      /* ; fill_memory takes r0 - r2 as arguments uses r4, r5, r6, r7, r8, r9, and does not preserve contents */
20000254:	f000 f858 	bl	20000308 <fill_memory>

20000258 <clear_heap>:
clear_heap():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:287
 * (EDAC). We use the decision made earlier in the startup code of whether or
 * not the stack RAM should be initialized. This decision is held in register
 * r11. A non-zero value indicates that the RAM content should be initialized.
 */
clear_heap:
    cmp r11, #0
20000258:	f1bb 0f00 	cmp.w	fp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:288
    beq call_glob_ctor
2000025c:	d010      	beq.n	20000280 <call_glob_ctor>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:289
    ldr r0, =__heap_start__
2000025e:	488f      	ldr	r0, [pc, #572]	; (2000049c <SF2_MDDR_MODE_CR+0x46>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:290
    ldr r1, =_eheap
20000260:	498f      	ldr	r1, [pc, #572]	; (200004a0 <SF2_MDDR_MODE_CR+0x4a>)
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:291
    ldr r2, HEAP_INIT_PATTERN
20000262:	f8df 21d6 	ldr.w	r2, [pc, #470]	; 2000043a <HEAP_INIT_PATTERN>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:292
    bl fill_memory                      /* ; fill_memory takes r0 - r2 as arguments uses r4, r5, r6, r7, r8, r9, and does not preserve contents */
20000266:	f000 f84f 	bl	20000308 <fill_memory>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:297

/*------------------------------------------------------------------------------
 * Restore MDDR configuration.
 */
    and r10, r11, 0x2
2000026a:	f00b 0a02 	and.w	sl, fp, #2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:298
    cmp r10, #0
2000026e:	f1ba 0f00 	cmp.w	sl, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:299
    beq call_glob_ctor
20000272:	d005      	beq.n	20000280 <call_glob_ctor>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:300
    pop {r0, r1, r2, r3}
20000274:	bc0f      	pop	{r0, r1, r2, r3}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:301
    str r2, [r0]
20000276:	6002      	str	r2, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:302
    str r3, [r1]
20000278:	600b      	str	r3, [r1, #0]
2000027a:	bf00      	nop
2000027c:	f3af 8000 	nop.w

20000280 <call_glob_ctor>:
call_glob_ctor():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:313
     * Align to word and use 32-bits LDR instruction to ensure the ADD instruction
     * taking PC as argument is aligned on a word boundary.
     */
    .align 4
call_glob_ctor:
    ldr.w r0, =__libc_init_array
20000280:	f8df 0220 	ldr.w	r0, [pc, #544]	; 200004a4 <SF2_MDDR_MODE_CR+0x4e>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:314
    add lr, pc, #3
20000284:	f20f 0e03 	addw	lr, pc, #3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:315
    bx r0
20000288:	4700      	bx	r0

2000028a <branch_to_main>:
branch_to_main():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:321
    
/*------------------------------------------------------------------------------
 * branch to main.
 */
branch_to_main:
    mov r0, #0      /*  ; no arguments  */
2000028a:	f04f 0000 	mov.w	r0, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:322
    mov r1, #0      /*  ; no argv either */
2000028e:	f04f 0100 	mov.w	r1, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:323
    ldr pc, =main
20000292:	f8df f214 	ldr.w	pc, [pc, #532]	; 200004a8 <SF2_MDDR_MODE_CR+0x52>

20000296 <ExitLoop>:
ExitLoop():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:326

ExitLoop:
    B ExitLoop
20000296:	e7fe      	b.n	20000296 <ExitLoop>

20000298 <block_copy>:
block_copy():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:341
 * should be used as per example linker scripts.
 * Note 1: If the memory address in r0 or r1, byte copy routine is used
 * Note 2: If r1 < r2, will loop indefinetley to highlight linker issue.
 */
block_copy:
    push {r3, r4, r5, r6, r7, r8, lr}
20000298:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:342
    cmp r0, r1
2000029c:	4288      	cmp	r0, r1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:343
    beq block_copy_exit          /* ; Exit early if source and destination the same */
2000029e:	d025      	beq.n	200002ec <block_copy_exit>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:344
    subs.w r2, r2, r1            /* ; Calculate number of bytes to move */
200002a0:	ebb2 0201 	subs.w	r2, r2, r1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:345
    bpl  block_copy_address_ok   /* ; check (end target address) > (target address) => continue */
200002a4:	d500      	bpl.n	200002a8 <block_copy_address_ok>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:346
    b .                          /* ; halt as critical error-  memory map not OK- make it easy to catch in debugger */
200002a6:	e7fe      	b.n	200002a6 <block_copy+0xe>

200002a8 <block_copy_address_ok>:
block_copy_address_ok():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:349
block_copy_address_ok:
    /* ; detect if source or target memory addresses unaligned. If so use byte copy routine */
    orr.w r3, r0, r1
200002a8:	ea40 0301 	orr.w	r3, r0, r1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:350
    ands.w r3, r3, #3
200002ac:	f013 0303 	ands.w	r3, r3, #3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:351
    beq  block_copy_continue
200002b0:	d002      	beq.n	200002b8 <block_copy_continue>

200002b2 <block_copy_byte_copy>:
block_copy_byte_copy():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:353
block_copy_byte_copy:
    bl block_copy_byte
200002b2:	f000 f81d 	bl	200002f0 <block_copy_byte>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:354
    b  block_copy_exit
200002b6:	e019      	b.n	200002ec <block_copy_exit>

200002b8 <block_copy_continue>:
block_copy_continue():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:356
block_copy_continue:
    mov  r3, #0
200002b8:	f04f 0300 	mov.w	r3, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:357
    mov  r8,r2                   /* ; Save copy of byte count */
200002bc:	4690      	mov	r8, r2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:358
    asrs r2,r2, #4               /* ; Div by 16 to get number of chunks to move */
200002be:	1112      	asrs	r2, r2, #4
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:359
    beq block_copy_byte_copy     /* ; need to use byte copy if less than 16 bytes */
200002c0:	d0f7      	beq.n	200002b2 <block_copy_byte_copy>

200002c2 <block_copy_loop>:
block_copy_loop():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:361
block_copy_loop:
    cmp r2, r3
200002c2:	429a      	cmp	r2, r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:362
    itt ne
200002c4:	bf1c      	itt	ne
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:363
    ldmne r0!, {r4, r5, r6, r7}
200002c6:	c8f0      	ldmiane	r0!, {r4, r5, r6, r7}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:364
    stmne r1!, {r4, r5, r6, r7}
200002c8:	c1f0      	stmiane	r1!, {r4, r5, r6, r7}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:365
    add.w r3, r3, #1            /* ; use Thumb2- make sure condition code reg. not updated */
200002ca:	f103 0301 	add.w	r3, r3, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:366
    bne block_copy_loop
200002ce:	d1f8      	bne.n	200002c2 <block_copy_loop>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:368
    /* ; copy spare bytes at the end if any */
    and r8, #15                 /* ; get spare bytes  --check can you do an ands?   */
200002d0:	f008 080f 	and.w	r8, r8, #15
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:369
    cmp r8, #0                  /* ; no spare bytes at end- end now     */
200002d4:	f1b8 0f00 	cmp.w	r8, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:370
    beq block_copy_exit
200002d8:	d008      	beq.n	200002ec <block_copy_exit>

200002da <copy_spare_bytes>:
copy_spare_bytes():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:372
copy_spare_bytes:               /* ; From above, R0 contains source address, R1 contains destination address */
    ldrb r4, [r0]
200002da:	7804      	ldrb	r4, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:373
    strb r4, [r1]
200002dc:	700c      	strb	r4, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:374
    add  r0, #1
200002de:	f100 0001 	add.w	r0, r0, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:375
    add  r1, #1
200002e2:	f101 0101 	add.w	r1, r1, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:376
    subs r8, r8, #1
200002e6:	f1b8 0801 	subs.w	r8, r8, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:377
    bne copy_spare_bytes
200002ea:	d1f6      	bne.n	200002da <copy_spare_bytes>

200002ec <block_copy_exit>:
block_copy_exit():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:379
block_copy_exit:
    pop {r3, r4, r5, r6, r7, r8, pc}
200002ec:	e8bd 81f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, pc}

200002f0 <block_copy_byte>:
block_copy_byte():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:388
 * r0: source address
 * r1: target address
 * r2: number of bytes
*/
block_copy_byte:
    push {r3, lr}
200002f0:	b508      	push	{r3, lr}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:389
    mov  r3, #0
200002f2:	f04f 0300 	mov.w	r3, #0

200002f6 <block_copy_byte_loop>:
block_copy_byte_loop():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:391
block_copy_byte_loop:            /* ; From above, R0 contains source address, R1 contains destination address */
    ldrb r3, [r0]
200002f6:	7803      	ldrb	r3, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:392
    strb r3, [r1]
200002f8:	700b      	strb	r3, [r1, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:393
    add  r0, #1
200002fa:	f100 0001 	add.w	r0, r0, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:394
    add  r1, #1
200002fe:	f101 0101 	add.w	r1, r1, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:395
    subs r2, r2, #1
20000302:	3a01      	subs	r2, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:396
    bne block_copy_byte_loop
20000304:	d1f7      	bne.n	200002f6 <block_copy_byte_loop>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:397
    pop {r3, pc}
20000306:	bd08      	pop	{r3, pc}

20000308 <fill_memory>:
fill_memory():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:419
; * @return none - Used Registers are not preserved
; */

fill_memory:
    /* ;push {r4, r5, r6, r7, r8, r9, lr}    We will not use stack as may be not available */
    cmp r0, r1
20000308:	4288      	cmp	r0, r1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:420
    beq fill_memory_exit        /* ; Exit early if source and destination the same */
2000030a:	d037      	beq.n	2000037c <fill_memory_exit>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:422
/* ; copy non-aligned bytes at the start */
    and.w  r6, r0, #3           /* ; see if non-alaigned bytes at the start     */
2000030c:	f000 0603 	and.w	r6, r0, #3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:423
    cmp r6, #0
20000310:	2e00      	cmp	r6, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:424
    beq fill_memory_end_start   /* ; no spare bytes at start, continue  */
20000312:	d014      	beq.n	2000033e <fill_memory_end_start>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:425
    mov    r5, #4
20000314:	f04f 0504 	mov.w	r5, #4
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:426
    sub.w  r4, r5, r6           /* ; now have number of non-aligned bytes in r4 */
20000318:	eba5 0406 	sub.w	r4, r5, r6
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:427
    mov  r7, #8
2000031c:	f04f 0708 	mov.w	r7, #8
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:428
    mul  r8, r7, r6             /* ; calculate number of shifts required to initalise pattern for non-aligned bytes */
20000320:	fb07 f806 	mul.w	r8, r7, r6
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:429
    mov  r9, r2                 /* ; copy pattern */
20000324:	4691      	mov	r9, r2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:430
    ror  r9, r9, r8             /* ; Rotate right to keep pattern consistent */
20000326:	fa69 f908 	ror.w	r9, r9, r8

2000032a <fill_memory_spare_bytes_start>:
fill_memory_spare_bytes_start():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:432
fill_memory_spare_bytes_start:  /* ; From above, R0 contains source address, R1 contains destination address */
    cmp r4, #0                  /* ; no spare bytes at end- end now     */
2000032a:	2c00      	cmp	r4, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:433
    beq fill_memory_end_start
2000032c:	d007      	beq.n	2000033e <fill_memory_end_start>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:434
    strb r9, [r0]               /* ; fill byte */
2000032e:	f880 9000 	strb.w	r9, [r0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:435
    ror.w  r9, r9, r7           /* ; Rotate right by one byte for the next time, to keep pattern consistent */
20000332:	fa69 f907 	ror.w	r9, r9, r7
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:436
    add r0, r0, #1              /* ; add one to address */
20000336:	f100 0001 	add.w	r0, r0, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:437
    subs r4, r4, #1             /* ; subtract one from byte count 1 */
2000033a:	3c01      	subs	r4, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:438
    b fill_memory_spare_bytes_start
2000033c:	e7f5      	b.n	2000032a <fill_memory_spare_bytes_start>

2000033e <fill_memory_end_start>:
fill_memory_end_start():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:440
fill_memory_end_start:
    mov  r6, #0
2000033e:	f04f 0600 	mov.w	r6, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:441
    mov  r7, r1                  /* ; save end address */
20000342:	460f      	mov	r7, r1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:442
    subs r1, r1, r0              /* ; Calculate number of bytes to fill */
20000344:	1a09      	subs	r1, r1, r0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:443
    mov  r8,r1                   /* ; Save copy of byte count */
20000346:	4688      	mov	r8, r1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:444
    asrs r1,r1, #4               /* ; Div by 16 to get number of chunks to move */
20000348:	1109      	asrs	r1, r1, #4
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:445
    mov  r9, r2                  /* ; copy pattern */
2000034a:	4691      	mov	r9, r2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:446
    mov  r4, r2                  /* ; copy pattern */
2000034c:	4614      	mov	r4, r2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:447
    mov  r5, r2                  /* ; copy pattern */
2000034e:	4615      	mov	r5, r2
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:448
    cmp r1, r6                   /* ; compare to see if all chunks copied */
20000350:	42b1      	cmp	r1, r6
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:449
    beq fill_memory_spare_bytes_end
20000352:	d006      	beq.n	20000362 <fill_memory_spare_bytes_end>

20000354 <fill_memory_loop>:
fill_memory_loop():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:451
fill_memory_loop:
    it ne
20000354:	bf18      	it	ne
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:452
    stmne r0!, {r2, r4, r5, r9}  /* ; copy pattern- note: stmne instruction must me word aligned (address in r0) */
20000356:	e8a0 0234 	stmiane.w	r0!, {r2, r4, r5, r9}
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:453
    add.w r6, r6, #1             /* ; use Thumb2- make sure condition code reg. not updated */
2000035a:	f106 0601 	add.w	r6, r6, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:454
    cmp r1, r6                   /* ; compare to see if all chunks copied */
2000035e:	42b1      	cmp	r1, r6
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:455
    bne fill_memory_loop
20000360:	d1f8      	bne.n	20000354 <fill_memory_loop>

20000362 <fill_memory_spare_bytes_end>:
fill_memory_spare_bytes_end():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:457
fill_memory_spare_bytes_end:     /* ; copy spare bytes at the end if any */
    and.w r8, r8, #15            /* ; get spare bytes  --check can you do an ands?  */
20000362:	f008 080f 	and.w	r8, r8, #15

20000366 <fill_memory_spare_end_loop>:
fill_memory_spare_end_loop():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:459
fill_memory_spare_end_loop:      /* ; From above, R0 contains source address, R1 contains destination address */
    cmp r8, #0                   /* ; no spare bytes at end- end now    */
20000366:	f1b8 0f00 	cmp.w	r8, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:460
    beq fill_memory_exit
2000036a:	d007      	beq.n	2000037c <fill_memory_exit>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:461
    strb r2, [r0]
2000036c:	7002      	strb	r2, [r0, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:462
    ror.w  r2, r2, #8            /* ; Rotate right by one byte for the next time, to keep pattern consistent */
2000036e:	ea4f 2232 	mov.w	r2, r2, ror #8
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:463
    add r0, r0, #1               /* ; add one to address */
20000372:	f100 0001 	add.w	r0, r0, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:464
    subs r8, r8, #1              /* ; subtract one from byte count 1    */
20000376:	f1b8 0801 	subs.w	r8, r8, #1
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:465
    b fill_memory_spare_end_loop
2000037a:	e7f4      	b.n	20000366 <fill_memory_spare_end_loop>

2000037c <fill_memory_exit>:
fill_memory_exit():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:467
fill_memory_exit:
    bx lr               /*; We will not use pop as stack may be not available */
2000037c:	4770      	bx	lr

2000037e <NMI_Handler>:
NMI_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:554
 * NMI_Handler
 */
    .weak   NMI_Handler
    .type   NMI_Handler, %function
NMI_Handler:
    B .
2000037e:	e7fe      	b.n	2000037e <NMI_Handler>

20000380 <HardFault_Handler>:
HardFault_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:562
 * HardFault_Handler
 */
    .weak   HardFault_Handler
    .type   HardFault_Handler, %function
HardFault_Handler:
    B .
20000380:	e7fe      	b.n	20000380 <HardFault_Handler>

20000382 <MemManage_Handler>:
MemManage_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:570
 * MemManage_Handler
 */
    .weak   MemManage_Handler
    .type   MemManage_Handler, %function
MemManage_Handler:
    B .
20000382:	e7fe      	b.n	20000382 <MemManage_Handler>

20000384 <BusFault_Handler>:
BusFault_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:578
 * BusFault_Handler
 */
    .weak   BusFault_Handler
    .type   BusFault_Handler, %function
BusFault_Handler:
    B .
20000384:	e7fe      	b.n	20000384 <BusFault_Handler>

20000386 <UsageFault_Handler>:
UsageFault_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:586
 * UsageFault_Handler
 */
    .weak   UsageFault_Handler
    .type   UsageFault_Handler, %function
UsageFault_Handler:
    B .
20000386:	e7fe      	b.n	20000386 <UsageFault_Handler>

20000388 <SVC_Handler>:
SVC_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:594
 * SVC_Handler
 */
    .weak   SVC_Handler
    .type   SVC_Handler, %function
SVC_Handler:
    B .
20000388:	e7fe      	b.n	20000388 <SVC_Handler>

2000038a <DebugMon_Handler>:
DebugMon_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:602
 * DebugMon_Handler
 */
    .weak   DebugMon_Handler
    .type   DebugMon_Handler, %function
DebugMon_Handler:
    B .
2000038a:	e7fe      	b.n	2000038a <DebugMon_Handler>

2000038c <PendSV_Handler>:
PendSV_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:610
 * PendSV_Handler
 */
    .weak   PendSV_Handler
    .type   PendSV_Handler, %function
PendSV_Handler:
    B .
2000038c:	e7fe      	b.n	2000038c <PendSV_Handler>

2000038e <SysTick_Handler>:
SysTick_Handler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:618
 * SysTick_Handler
 */
    .weak   SysTick_Handler
    .type   SysTick_Handler, %function
SysTick_Handler:
    B .
2000038e:	e7fe      	b.n	2000038e <SysTick_Handler>

20000390 <WdogWakeup_IRQHandler>:
WdogWakeup_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:626
 * WdogWakeup_IRQHandler
 */
    .weak   WdogWakeup_IRQHandler
    .type   WdogWakeup_IRQHandler, %function
WdogWakeup_IRQHandler:
    B .
20000390:	e7fe      	b.n	20000390 <WdogWakeup_IRQHandler>

20000392 <RTC_Wakeup_IRQHandler>:
RTC_Wakeup_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:634
 * RTC_Wakeup_IRQHandler
 */
    .weak   RTC_Wakeup_IRQHandler
    .type   RTC_Wakeup_IRQHandler, %function
RTC_Wakeup_IRQHandler:
    B .
20000392:	e7fe      	b.n	20000392 <RTC_Wakeup_IRQHandler>

20000394 <SPI0_IRQHandler>:
SPI0_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:642
 * SPI0_IRQHandler
 */
    .weak   SPI0_IRQHandler
    .type   SPI0_IRQHandler, %function
SPI0_IRQHandler:
    B .
20000394:	e7fe      	b.n	20000394 <SPI0_IRQHandler>

20000396 <SPI1_IRQHandler>:
SPI1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:650
 * SPI1_IRQHandler
 */
    .weak   SPI1_IRQHandler
    .type   SPI1_IRQHandler, %function
SPI1_IRQHandler:
    B .
20000396:	e7fe      	b.n	20000396 <SPI1_IRQHandler>

20000398 <I2C0_IRQHandler>:
I2C0_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:658
 * I2C0_IRQHandler
 */
    .weak   I2C0_IRQHandler
    .type   I2C0_IRQHandler, %function
I2C0_IRQHandler:
    B .
20000398:	e7fe      	b.n	20000398 <I2C0_IRQHandler>

2000039a <I2C0_SMBAlert_IRQHandler>:
I2C0_SMBAlert_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:666
 * I2C0_SMBAlert_IRQHandler
 */
    .weak   I2C0_SMBAlert_IRQHandler
    .type   I2C0_SMBAlert_IRQHandler, %function
I2C0_SMBAlert_IRQHandler:
    B .
2000039a:	e7fe      	b.n	2000039a <I2C0_SMBAlert_IRQHandler>

2000039c <I2C0_SMBus_IRQHandler>:
I2C0_SMBus_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:674
 * I2C0_SMBus_IRQHandler
 */
    .weak   I2C0_SMBus_IRQHandler
    .type   I2C0_SMBus_IRQHandler, %function
I2C0_SMBus_IRQHandler:
    B .
2000039c:	e7fe      	b.n	2000039c <I2C0_SMBus_IRQHandler>

2000039e <I2C1_IRQHandler>:
I2C1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:682
 * I2C1_IRQHandler
 */
    .weak   I2C1_IRQHandler
    .type   I2C1_IRQHandler, %function
I2C1_IRQHandler:
    B .
2000039e:	e7fe      	b.n	2000039e <I2C1_IRQHandler>

200003a0 <I2C1_SMBAlert_IRQHandler>:
I2C1_SMBAlert_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:690
 * I2C1_SMBAlert_IRQHandler
 */
    .weak   I2C1_SMBAlert_IRQHandler
    .type   I2C1_SMBAlert_IRQHandler, %function
I2C1_SMBAlert_IRQHandler:
    B .
200003a0:	e7fe      	b.n	200003a0 <I2C1_SMBAlert_IRQHandler>

200003a2 <I2C1_SMBus_IRQHandler>:
I2C1_SMBus_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:698
 * I2C1_SMBus_IRQHandler
 */
    .weak   I2C1_SMBus_IRQHandler
    .type   I2C1_SMBus_IRQHandler, %function
I2C1_SMBus_IRQHandler:
    B .
200003a2:	e7fe      	b.n	200003a2 <I2C1_SMBus_IRQHandler>

200003a4 <UART0_IRQHandler>:
UART0_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:706
 * UART0_IRQHandler
 */
    .weak   UART0_IRQHandler
    .type   UART0_IRQHandler, %function
UART0_IRQHandler:
    B .
200003a4:	e7fe      	b.n	200003a4 <UART0_IRQHandler>

200003a6 <UART1_IRQHandler>:
UART1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:714
 * UART1_IRQHandler
 */
    .weak   UART1_IRQHandler
    .type   UART1_IRQHandler, %function
UART1_IRQHandler:
    B .
200003a6:	e7fe      	b.n	200003a6 <UART1_IRQHandler>

200003a8 <EthernetMAC_IRQHandler>:
EthernetMAC_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:722
 * EthernetMAC_IRQHandler
 */
    .weak   EthernetMAC_IRQHandler
    .type   EthernetMAC_IRQHandler, %function
EthernetMAC_IRQHandler:
    B .
200003a8:	e7fe      	b.n	200003a8 <EthernetMAC_IRQHandler>

200003aa <DMA_IRQHandler>:
DMA_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:730
 * DMA_IRQHandler
 */
    .weak   DMA_IRQHandler
    .type   DMA_IRQHandler, %function
DMA_IRQHandler:
    B .
200003aa:	e7fe      	b.n	200003aa <DMA_IRQHandler>

200003ac <Timer1_IRQHandler>:
Timer1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:738
 * Timer1_IRQHandler
 */
    .weak   Timer1_IRQHandler
    .type   Timer1_IRQHandler, %function
Timer1_IRQHandler:
    B .
200003ac:	e7fe      	b.n	200003ac <Timer1_IRQHandler>

200003ae <Timer2_IRQHandler>:
Timer2_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:746
 * Timer2_IRQHandler
 */
    .weak   Timer2_IRQHandler
    .type   Timer2_IRQHandler, %function
Timer2_IRQHandler:
    B .
200003ae:	e7fe      	b.n	200003ae <Timer2_IRQHandler>

200003b0 <CAN_IRQHandler>:
CAN_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:754
 * CAN_IRQHandler
 */
    .weak   CAN_IRQHandler
    .type   CAN_IRQHandler, %function
CAN_IRQHandler:
    B .
200003b0:	e7fe      	b.n	200003b0 <CAN_IRQHandler>

200003b2 <ENVM0_IRQHandler>:
ENVM0_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:762
 * ENVM0_IRQHandler
 */
    .weak   ENVM0_IRQHandler
    .type   ENVM0_IRQHandler, %function
ENVM0_IRQHandler:
    B .
200003b2:	e7fe      	b.n	200003b2 <ENVM0_IRQHandler>

200003b4 <ENVM1_IRQHandler>:
ENVM1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:770
 * ENVM1_IRQHandler
 */
    .weak   ENVM1_IRQHandler
    .type   ENVM1_IRQHandler, %function
ENVM1_IRQHandler:
    B .
200003b4:	e7fe      	b.n	200003b4 <ENVM1_IRQHandler>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:778
 * ComBlk_IRQHandler
 */
    .weak   ComBlk_IRQHandler
    .type   ComBlk_IRQHandler, %function
ComBlk_IRQHandler:
    B .
200003b6:	e7fe      	b.n	200003b6 <ENVM1_IRQHandler+0x2>

200003b8 <USB_IRQHandler>:
USB_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:786
 * USB_IRQHandler
 */
    .weak   USB_IRQHandler
    .type   USB_IRQHandler, %function
USB_IRQHandler:
    B .
200003b8:	e7fe      	b.n	200003b8 <USB_IRQHandler>

200003ba <USB_DMA_IRQHandler>:
USB_DMA_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:794
 * USB_DMA_IRQHandler
 */
    .weak   USB_DMA_IRQHandler
    .type   USB_DMA_IRQHandler, %function
USB_DMA_IRQHandler:
    B .
200003ba:	e7fe      	b.n	200003ba <USB_DMA_IRQHandler>

200003bc <PLL_Lock_IRQHandler>:
PLL_Lock_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:802
 * PLL_Lock_IRQHandler
 */
    .weak   PLL_Lock_IRQHandler
    .type   PLL_Lock_IRQHandler, %function
PLL_Lock_IRQHandler:
    B .
200003bc:	e7fe      	b.n	200003bc <PLL_Lock_IRQHandler>

200003be <PLL_LockLost_IRQHandler>:
PLL_LockLost_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:810
 * PLL_LockLost_IRQHandler
 */
    .weak   PLL_LockLost_IRQHandler
    .type   PLL_LockLost_IRQHandler, %function
PLL_LockLost_IRQHandler:
    B .
200003be:	e7fe      	b.n	200003be <PLL_LockLost_IRQHandler>

200003c0 <CommSwitchError_IRQHandler>:
CommSwitchError_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:818
 * CommSwitchError_IRQHandler
 */
    .weak   CommSwitchError_IRQHandler
    .type   CommSwitchError_IRQHandler, %function
CommSwitchError_IRQHandler:
    B .
200003c0:	e7fe      	b.n	200003c0 <CommSwitchError_IRQHandler>

200003c2 <CacheError_IRQHandler>:
CacheError_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:826
 * CacheError_IRQHandler
 */
    .weak   CacheError_IRQHandler
    .type   CacheError_IRQHandler, %function
CacheError_IRQHandler:
    B .
200003c2:	e7fe      	b.n	200003c2 <CacheError_IRQHandler>

200003c4 <DDR_IRQHandler>:
DDR_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:834
 * DDR_IRQHandler
 */
    .weak   DDR_IRQHandler
    .type   DDR_IRQHandler, %function
DDR_IRQHandler:
    B .
200003c4:	e7fe      	b.n	200003c4 <DDR_IRQHandler>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:842
 * HPDMA_Complete_IRQHandler
 */
    .weak   HPDMA_Complete_IRQHandler
    .type   HPDMA_Complete_IRQHandler, %function
HPDMA_Complete_IRQHandler:
    B .
200003c6:	e7fe      	b.n	200003c6 <DDR_IRQHandler+0x2>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:850
 * HPDMA_Error_IRQHandler
 */
    .weak   HPDMA_Error_IRQHandler
    .type   HPDMA_Error_IRQHandler, %function
HPDMA_Error_IRQHandler:
    B .
200003c8:	e7fe      	b.n	200003c8 <DDR_IRQHandler+0x4>

200003ca <ECC_Error_IRQHandler>:
ECC_Error_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:858
 * ECC_Error_IRQHandler
 */
    .weak   ECC_Error_IRQHandler
    .type   ECC_Error_IRQHandler, %function
ECC_Error_IRQHandler:
    B .
200003ca:	e7fe      	b.n	200003ca <ECC_Error_IRQHandler>

200003cc <MDDR_IOCalib_IRQHandler>:
MDDR_IOCalib_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:866
 * MDDR_IOCalib_IRQHandler
 */
    .weak   MDDR_IOCalib_IRQHandler
    .type   MDDR_IOCalib_IRQHandler, %function
MDDR_IOCalib_IRQHandler:
    B .
200003cc:	e7fe      	b.n	200003cc <MDDR_IOCalib_IRQHandler>

200003ce <FAB_PLL_Lock_IRQHandler>:
FAB_PLL_Lock_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:874
 * FAB_PLL_Lock_IRQHandler
 */
    .weak   FAB_PLL_Lock_IRQHandler
    .type   FAB_PLL_Lock_IRQHandler, %function    
FAB_PLL_Lock_IRQHandler:
    B .
200003ce:	e7fe      	b.n	200003ce <FAB_PLL_Lock_IRQHandler>

200003d0 <FAB_PLL_LockLost_IRQHandler>:
FAB_PLL_LockLost_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:882
 * FAB_PLL_LockLost_IRQHandler
 */
    .weak   FAB_PLL_LockLost_IRQHandler
    .type   FAB_PLL_LockLost_IRQHandler, %function        
FAB_PLL_LockLost_IRQHandler:
    B .
200003d0:	e7fe      	b.n	200003d0 <FAB_PLL_LockLost_IRQHandler>

200003d2 <FIC64_IRQHandler>:
FIC64_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:890
 * FIC64_IRQHandler
 */
    .weak   FIC64_IRQHandler
    .type   FIC64_IRQHandler, %function            
FIC64_IRQHandler:
    B .
200003d2:	e7fe      	b.n	200003d2 <FIC64_IRQHandler>

200003d4 <FabricIrq0_IRQHandler>:
FabricIrq0_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:898
 * FabricIrq0_IRQHandler
 */
    .weak   FabricIrq0_IRQHandler
    .type   FabricIrq0_IRQHandler, %function
FabricIrq0_IRQHandler:
    B .
200003d4:	e7fe      	b.n	200003d4 <FabricIrq0_IRQHandler>

200003d6 <FabricIrq1_IRQHandler>:
FabricIrq1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:906
 * FabricIrq1_IRQHandler
 */
    .weak   FabricIrq1_IRQHandler
    .type   FabricIrq1_IRQHandler, %function
FabricIrq1_IRQHandler:
    B .
200003d6:	e7fe      	b.n	200003d6 <FabricIrq1_IRQHandler>

200003d8 <FabricIrq2_IRQHandler>:
FabricIrq2_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:914
 * FabricIrq2_IRQHandler
 */
    .weak   FabricIrq2_IRQHandler
    .type   FabricIrq2_IRQHandler, %function
FabricIrq2_IRQHandler:
    B .
200003d8:	e7fe      	b.n	200003d8 <FabricIrq2_IRQHandler>

200003da <FabricIrq3_IRQHandler>:
FabricIrq3_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:922
 * FabricIrq3_IRQHandler
 */
    .weak   FabricIrq3_IRQHandler
    .type   FabricIrq3_IRQHandler, %function
FabricIrq3_IRQHandler:
    B .
200003da:	e7fe      	b.n	200003da <FabricIrq3_IRQHandler>

200003dc <FabricIrq4_IRQHandler>:
FabricIrq4_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:930
 * FabricIrq4_IRQHandler
 */
    .weak   FabricIrq4_IRQHandler
    .type   FabricIrq4_IRQHandler, %function
FabricIrq4_IRQHandler:
    B .
200003dc:	e7fe      	b.n	200003dc <FabricIrq4_IRQHandler>

200003de <FabricIrq5_IRQHandler>:
FabricIrq5_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:938
 * FabricIrq5_IRQHandler
 */
    .weak   FabricIrq5_IRQHandler
    .type   FabricIrq5_IRQHandler, %function
FabricIrq5_IRQHandler:
    B .
200003de:	e7fe      	b.n	200003de <FabricIrq5_IRQHandler>

200003e0 <FabricIrq6_IRQHandler>:
FabricIrq6_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:946
 * FabricIrq6_IRQHandler
 */
    .weak   FabricIrq6_IRQHandler
    .type   FabricIrq6_IRQHandler, %function
FabricIrq6_IRQHandler:
    B .
200003e0:	e7fe      	b.n	200003e0 <FabricIrq6_IRQHandler>

200003e2 <FabricIrq7_IRQHandler>:
FabricIrq7_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:954
 * FabricIrq7_IRQHandler
 */
    .weak   FabricIrq7_IRQHandler
    .type   FabricIrq7_IRQHandler, %function
FabricIrq7_IRQHandler:
    B .
200003e2:	e7fe      	b.n	200003e2 <FabricIrq7_IRQHandler>

200003e4 <FabricIrq8_IRQHandler>:
FabricIrq8_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:962
 * FabricIrq8_IRQHandler
 */
    .weak   FabricIrq8_IRQHandler
    .type   FabricIrq8_IRQHandler, %function
FabricIrq8_IRQHandler:
    B .
200003e4:	e7fe      	b.n	200003e4 <FabricIrq8_IRQHandler>

200003e6 <FabricIrq9_IRQHandler>:
FabricIrq9_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:970
 * FabricIrq9_IRQHandler
 */
    .weak   FabricIrq9_IRQHandler
    .type   FabricIrq9_IRQHandler, %function
FabricIrq9_IRQHandler:
    B .
200003e6:	e7fe      	b.n	200003e6 <FabricIrq9_IRQHandler>

200003e8 <FabricIrq10_IRQHandler>:
FabricIrq10_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:978
 * FabricIrq10_IRQHandler
 */
    .weak   FabricIrq10_IRQHandler
    .type   FabricIrq10_IRQHandler, %function
FabricIrq10_IRQHandler:
    B .
200003e8:	e7fe      	b.n	200003e8 <FabricIrq10_IRQHandler>

200003ea <FabricIrq11_IRQHandler>:
FabricIrq11_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:986
 * FabricIrq11_IRQHandler
 */
    .weak   FabricIrq11_IRQHandler
    .type   FabricIrq11_IRQHandler, %function
FabricIrq11_IRQHandler:
    B .
200003ea:	e7fe      	b.n	200003ea <FabricIrq11_IRQHandler>

200003ec <FabricIrq12_IRQHandler>:
FabricIrq12_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:994
 * FabricIrq12_IRQHandler
 */
    .weak   FabricIrq12_IRQHandler
    .type   FabricIrq12_IRQHandler, %function
FabricIrq12_IRQHandler:
    B .
200003ec:	e7fe      	b.n	200003ec <FabricIrq12_IRQHandler>

200003ee <FabricIrq13_IRQHandler>:
FabricIrq13_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1002
 * FabricIrq13_IRQHandler
 */
    .weak   FabricIrq13_IRQHandler
    .type   FabricIrq13_IRQHandler, %function
FabricIrq13_IRQHandler:
    B .
200003ee:	e7fe      	b.n	200003ee <FabricIrq13_IRQHandler>

200003f0 <FabricIrq14_IRQHandler>:
FabricIrq14_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1010
 * FabricIrq14_IRQHandler
 */
    .weak   FabricIrq14_IRQHandler
    .type   FabricIrq14_IRQHandler, %function
FabricIrq14_IRQHandler:
    B .
200003f0:	e7fe      	b.n	200003f0 <FabricIrq14_IRQHandler>

200003f2 <FabricIrq15_IRQHandler>:
FabricIrq15_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1018
 * FabricIrq15_IRQHandler
 */
    .weak   FabricIrq15_IRQHandler
    .type   FabricIrq15_IRQHandler, %function
FabricIrq15_IRQHandler:
    B .    
200003f2:	e7fe      	b.n	200003f2 <FabricIrq15_IRQHandler>

200003f4 <GPIO0_IRQHandler>:
GPIO0_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1026
 * GPIO0_IRQHandler
 */
    .weak   GPIO0_IRQHandler
    .type   GPIO0_IRQHandler, %function
GPIO0_IRQHandler:
    B .
200003f4:	e7fe      	b.n	200003f4 <GPIO0_IRQHandler>

200003f6 <GPIO1_IRQHandler>:
GPIO1_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1034
 * GPIO1_IRQHandler
 */
    .weak   GPIO1_IRQHandler
    .type   GPIO1_IRQHandler, %function
GPIO1_IRQHandler:
    B .
200003f6:	e7fe      	b.n	200003f6 <GPIO1_IRQHandler>

200003f8 <GPIO2_IRQHandler>:
GPIO2_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1042
 * GPIO2_IRQHandler
 */
    .weak   GPIO2_IRQHandler
    .type   GPIO2_IRQHandler, %function
GPIO2_IRQHandler:
    B .
200003f8:	e7fe      	b.n	200003f8 <GPIO2_IRQHandler>

200003fa <GPIO3_IRQHandler>:
GPIO3_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1050
 * GPIO3_IRQHandler
 */
    .weak   GPIO3_IRQHandler
    .type   GPIO3_IRQHandler, %function
GPIO3_IRQHandler:
    B .
200003fa:	e7fe      	b.n	200003fa <GPIO3_IRQHandler>

200003fc <GPIO4_IRQHandler>:
GPIO4_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1058
 * GPIO4_IRQHandler
 */
    .weak   GPIO4_IRQHandler
    .type   GPIO4_IRQHandler, %function
GPIO4_IRQHandler:
    B .
200003fc:	e7fe      	b.n	200003fc <GPIO4_IRQHandler>

200003fe <GPIO5_IRQHandler>:
GPIO5_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1066
 * GPIO5_IRQHandler
 */
    .weak   GPIO5_IRQHandler
    .type   GPIO5_IRQHandler, %function
GPIO5_IRQHandler:
    B .
200003fe:	e7fe      	b.n	200003fe <GPIO5_IRQHandler>

20000400 <GPIO6_IRQHandler>:
GPIO6_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1074
 * GPIO6_IRQHandler
 */
    .weak   GPIO6_IRQHandler
    .type   GPIO6_IRQHandler, %function
GPIO6_IRQHandler:
    B .
20000400:	e7fe      	b.n	20000400 <GPIO6_IRQHandler>

20000402 <GPIO7_IRQHandler>:
GPIO7_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1082
 * GPIO7_IRQHandler
 */
    .weak   GPIO7_IRQHandler
    .type   GPIO7_IRQHandler, %function
GPIO7_IRQHandler:
    B .
20000402:	e7fe      	b.n	20000402 <GPIO7_IRQHandler>

20000404 <GPIO8_IRQHandler>:
GPIO8_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1090
 * GPIO8_IRQHandler
 */
    .weak   GPIO8_IRQHandler
    .type   GPIO8_IRQHandler, %function
GPIO8_IRQHandler:
    B .
20000404:	e7fe      	b.n	20000404 <GPIO8_IRQHandler>

20000406 <GPIO9_IRQHandler>:
GPIO9_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1098
 * GPIO9_IRQHandler
 */
    .weak   GPIO9_IRQHandler
    .type   GPIO9_IRQHandler, %function
GPIO9_IRQHandler:
    B .
20000406:	e7fe      	b.n	20000406 <GPIO9_IRQHandler>

20000408 <GPIO10_IRQHandler>:
GPIO10_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1106
 * GPIO10_IRQHandler
 */
    .weak   GPIO10_IRQHandler
    .type   GPIO10_IRQHandler, %function
GPIO10_IRQHandler:
    B .
20000408:	e7fe      	b.n	20000408 <GPIO10_IRQHandler>

2000040a <GPIO11_IRQHandler>:
GPIO11_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1114
 * GPIO11_IRQHandler
 */
    .weak   GPIO11_IRQHandler
    .type   GPIO11_IRQHandler, %function
GPIO11_IRQHandler:
    B .
2000040a:	e7fe      	b.n	2000040a <GPIO11_IRQHandler>

2000040c <GPIO12_IRQHandler>:
GPIO12_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1122
 * GPIO12_IRQHandler
 */
    .weak   GPIO12_IRQHandler
    .type   GPIO12_IRQHandler, %function
GPIO12_IRQHandler:
    B .
2000040c:	e7fe      	b.n	2000040c <GPIO12_IRQHandler>

2000040e <GPIO13_IRQHandler>:
GPIO13_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1130
 * GPIO13_IRQHandler
 */
    .weak   GPIO13_IRQHandler
    .type   GPIO13_IRQHandler, %function
GPIO13_IRQHandler:
    B .
2000040e:	e7fe      	b.n	2000040e <GPIO13_IRQHandler>

20000410 <GPIO14_IRQHandler>:
GPIO14_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1138
 * GPIO14_IRQHandler
 */
    .weak   GPIO14_IRQHandler
    .type   GPIO14_IRQHandler, %function
GPIO14_IRQHandler:
    B .
20000410:	e7fe      	b.n	20000410 <GPIO14_IRQHandler>

20000412 <GPIO15_IRQHandler>:
GPIO15_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1146
 * GPIO15_IRQHandler
 */
    .weak   GPIO15_IRQHandler
    .type   GPIO15_IRQHandler, %function
GPIO15_IRQHandler:
    B .
20000412:	e7fe      	b.n	20000412 <GPIO15_IRQHandler>

20000414 <GPIO16_IRQHandler>:
GPIO16_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1154
 * GPIO16_IRQHandler
 */
    .weak   GPIO16_IRQHandler
    .type   GPIO16_IRQHandler, %function
GPIO16_IRQHandler:
    B .
20000414:	e7fe      	b.n	20000414 <GPIO16_IRQHandler>

20000416 <GPIO17_IRQHandler>:
GPIO17_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1162
 * GPIO17_IRQHandler
 */
    .weak   GPIO17_IRQHandler
    .type   GPIO17_IRQHandler, %function
GPIO17_IRQHandler:
    B .
20000416:	e7fe      	b.n	20000416 <GPIO17_IRQHandler>

20000418 <GPIO18_IRQHandler>:
GPIO18_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1170
 * GPIO18_IRQHandler
 */
    .weak   GPIO18_IRQHandler
    .type   GPIO18_IRQHandler, %function
GPIO18_IRQHandler:
    B .
20000418:	e7fe      	b.n	20000418 <GPIO18_IRQHandler>

2000041a <GPIO19_IRQHandler>:
GPIO19_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1178
 * GPIO19_IRQHandler
 */
    .weak   GPIO19_IRQHandler
    .type   GPIO19_IRQHandler, %function
GPIO19_IRQHandler:
    B .
2000041a:	e7fe      	b.n	2000041a <GPIO19_IRQHandler>

2000041c <GPIO20_IRQHandler>:
GPIO20_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1186
 * GPIO20_IRQHandler
 */
    .weak   GPIO20_IRQHandler
    .type   GPIO20_IRQHandler, %function
GPIO20_IRQHandler:
    B .
2000041c:	e7fe      	b.n	2000041c <GPIO20_IRQHandler>

2000041e <GPIO21_IRQHandler>:
GPIO21_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1194
 * GPIO21_IRQHandler
 */
    .weak   GPIO21_IRQHandler
    .type   GPIO21_IRQHandler, %function
GPIO21_IRQHandler:
    B .
2000041e:	e7fe      	b.n	2000041e <GPIO21_IRQHandler>

20000420 <GPIO22_IRQHandler>:
GPIO22_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1202
 * GPIO22_IRQHandler
 */
    .weak   GPIO22_IRQHandler
    .type   GPIO22_IRQHandler, %function
GPIO22_IRQHandler:
    B .
20000420:	e7fe      	b.n	20000420 <GPIO22_IRQHandler>

20000422 <GPIO23_IRQHandler>:
GPIO23_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1210
 * GPIO23_IRQHandler
 */
    .weak   GPIO23_IRQHandler
    .type   GPIO23_IRQHandler, %function
GPIO23_IRQHandler:
    B .
20000422:	e7fe      	b.n	20000422 <GPIO23_IRQHandler>

20000424 <GPIO24_IRQHandler>:
GPIO24_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1218
 * GPIO24_IRQHandler
 */
    .weak   GPIO24_IRQHandler
    .type   GPIO24_IRQHandler, %function
GPIO24_IRQHandler:
    B .
20000424:	e7fe      	b.n	20000424 <GPIO24_IRQHandler>

20000426 <GPIO25_IRQHandler>:
GPIO25_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1226
 * GPIO25_IRQHandler
 */
    .weak   GPIO25_IRQHandler
    .type   GPIO25_IRQHandler, %function
GPIO25_IRQHandler:
    B .
20000426:	e7fe      	b.n	20000426 <GPIO25_IRQHandler>

20000428 <GPIO26_IRQHandler>:
GPIO26_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1234
 * GPIO26_IRQHandler
 */
    .weak   GPIO26_IRQHandler
    .type   GPIO26_IRQHandler, %function
GPIO26_IRQHandler:
    B .
20000428:	e7fe      	b.n	20000428 <GPIO26_IRQHandler>

2000042a <GPIO27_IRQHandler>:
GPIO27_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1242
 * GPIO27_IRQHandler
 */
    .weak   GPIO27_IRQHandler
    .type   GPIO27_IRQHandler, %function
GPIO27_IRQHandler:
    B .
2000042a:	e7fe      	b.n	2000042a <GPIO27_IRQHandler>

2000042c <GPIO28_IRQHandler>:
GPIO28_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1250
 * GPIO28_IRQHandler
 */
    .weak   GPIO28_IRQHandler
    .type   GPIO28_IRQHandler, %function
GPIO28_IRQHandler:
    B .
2000042c:	e7fe      	b.n	2000042c <GPIO28_IRQHandler>

2000042e <GPIO29_IRQHandler>:
GPIO29_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1258
 * GPIO29_IRQHandler
 */
    .weak   GPIO29_IRQHandler
    .type   GPIO29_IRQHandler, %function
GPIO29_IRQHandler:
    B .
2000042e:	e7fe      	b.n	2000042e <GPIO29_IRQHandler>

20000430 <GPIO30_IRQHandler>:
GPIO30_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1266
 * GPIO30_IRQHandler
 */
    .weak   GPIO30_IRQHandler
    .type   GPIO30_IRQHandler, %function
GPIO30_IRQHandler:
    B .
20000430:	e7fe      	b.n	20000430 <GPIO30_IRQHandler>

20000432 <GPIO31_IRQHandler>:
GPIO31_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1274
 * GPIO31_IRQHandler
 */
    .weak   GPIO31_IRQHandler
    .type   GPIO31_IRQHandler, %function
GPIO31_IRQHandler:
    B .
20000432:	e7fe      	b.n	20000432 <GPIO31_IRQHandler>

20000434 <mscc_post_hw_cfg_init>:
mscc_post_hw_cfg_init():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
 * mscc_post_hw_cfg_init
 */
    .weak   mscc_post_hw_cfg_init
    .type   mscc_post_hw_cfg_init, %function
mscc_post_hw_cfg_init:
    BX LR
20000434:	4770      	bx	lr

20000436 <RAM_INIT_PATTERN>:
RAM_INIT_PATTERN():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000436:	0000      	.short	0x0000
	...

2000043a <HEAP_INIT_PATTERN>:
HEAP_INIT_PATTERN():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000043a:	a2a2      	.short	0xa2a2
2000043c:	a2a2      	.short	0xa2a2

2000043e <SF2_ESRAM_CR>:
SF2_ESRAM_CR():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000043e:	8000      	.short	0x8000
20000440:	4003      	.short	0x4003

20000442 <SF2_DDR_CR>:
SF2_DDR_CR():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000442:	8008      	.short	0x8008
20000444:	4003      	.short	0x4003

20000446 <SF2_ENVM_REMAP_CR>:
SF2_ENVM_REMAP_CR():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000446:	8010      	.short	0x8010
20000448:	4003      	.short	0x4003

2000044a <SF2_DDRB_NB_SIZE>:
SF2_DDRB_NB_SIZE():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000044a:	8030      	.short	0x8030
2000044c:	4003      	.short	0x4003

2000044e <SF2_DDRB_CR>:
SF2_DDRB_CR():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
2000044e:	8034      	.short	0x8034
20000450:	4003      	.short	0x4003

20000452 <SF2_EDAC_CR>:
SF2_EDAC_CR():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000452:	8038      	.short	0x8038
20000454:	4003      	.short	0x4003

20000456 <SF2_MDDR_MODE_CR>:
SF2_MDDR_MODE_CR():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:1282
20000456:	0818      	.short	0x0818
20000458:	00004002 	.word	0x00004002
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:168
    ldr r0, = __stack_start__
2000045c:	2000f000 	.word	0x2000f000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:169
    ldr r1, =_estack
20000460:	20010000 	.word	0x20010000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:177
    ldr r0, =SystemInit
20000464:	20000d5d 	.word	0x20000d5d
	...
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:243
    ldr r0, =__vector_table_load
20000470:	20000000 	.word	0x20000000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:244
    ldr r1, =__vector_table_start
20000474:	20000000 	.word	0x20000000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:245
    ldr r2, =_evector_table
20000478:	20000190 	.word	0x20000190
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:252
    ldr r0, =__text_load
2000047c:	200004b0 	.word	0x200004b0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:253
    ldr r1, =__text_start
20000480:	200004b0 	.word	0x200004b0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:254
    ldr r2, =_etext
20000484:	20000ee0 	.word	0x20000ee0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:262
    ldr r0, =__data_load
20000488:	20000ee0 	.word	0x20000ee0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:263
    ldr r1, =__data_start
2000048c:	20000ee0 	.word	0x20000ee0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:264
    ldr r2, =_edata
20000490:	20000ee0 	.word	0x20000ee0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:271
    ldr r0, =__bss_start__
20000494:	20000ee0 	.word	0x20000ee0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:272
    ldr r1, =__bss_end__
20000498:	20000f50 	.word	0x20000f50
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:289
    ldr r0, =__heap_start__
2000049c:	20000f50 	.word	0x20000f50
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:290
    ldr r1, =_eheap
200004a0:	2000f000 	.word	0x2000f000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:313
    ldr.w r0, =__libc_init_array
200004a4:	20000e75 	.word	0x20000e75
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/startup_gcc/startup_m2sxxx.S:323
    ldr pc, =main
200004a8:	20000e19 	.word	0x20000e19
200004ac:	00000000 	.word	0x00000000

Disassembly of section .text:

200004b0 <__do_global_dtors_aux>:
__text_start():
200004b0:	b510      	push	{r4, lr}
200004b2:	4c05      	ldr	r4, [pc, #20]	; (200004c8 <__text_load+0x18>)
200004b4:	7823      	ldrb	r3, [r4, #0]
200004b6:	b933      	cbnz	r3, 200004c6 <__do_global_dtors_aux+0x16>
200004b8:	4b04      	ldr	r3, [pc, #16]	; (200004cc <__text_load+0x1c>)
200004ba:	b113      	cbz	r3, 200004c2 <__do_global_dtors_aux+0x12>
200004bc:	4804      	ldr	r0, [pc, #16]	; (200004d0 <__text_load+0x20>)
200004be:	f3af 8000 	nop.w
200004c2:	2301      	movs	r3, #1
200004c4:	7023      	strb	r3, [r4, #0]
200004c6:	bd10      	pop	{r4, pc}
200004c8:	20000ee0 	.word	0x20000ee0
200004cc:	00000000 	.word	0x00000000
200004d0:	20000ebc 	.word	0x20000ebc

200004d4 <frame_dummy>:
frame_dummy():
200004d4:	b508      	push	{r3, lr}
200004d6:	4b03      	ldr	r3, [pc, #12]	; (200004e4 <frame_dummy+0x10>)
200004d8:	b11b      	cbz	r3, 200004e2 <frame_dummy+0xe>
200004da:	4903      	ldr	r1, [pc, #12]	; (200004e8 <frame_dummy+0x14>)
200004dc:	4803      	ldr	r0, [pc, #12]	; (200004ec <frame_dummy+0x18>)
200004de:	f3af 8000 	nop.w
200004e2:	bd08      	pop	{r3, pc}
200004e4:	00000000 	.word	0x00000000
200004e8:	20000ee4 	.word	0x20000ee4
200004ec:	20000ebc 	.word	0x20000ebc

200004f0 <ComBlk_IRQHandler>:
ComBlk_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:360

/*==============================================================================
 * COMBLK interrupt handler.
 */
void ComBlk_IRQHandler(void)
{
200004f0:	b580      	push	{r7, lr}
200004f2:	b082      	sub	sp, #8
200004f4:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:365
    uint8_t status;
    uint8_t tx_okay;
    uint8_t rcv_okay;
    
    status = (uint8_t)COMBLK->STATUS;
200004f6:	4b0f      	ldr	r3, [pc, #60]	; (20000534 <ComBlk_IRQHandler+0x44>)
200004f8:	685b      	ldr	r3, [r3, #4]
200004fa:	71fb      	strb	r3, [r7, #7]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:368
    
    /* Mask off interrupt that are not enabled.*/
    status &= COMBLK->INT_ENABLE;
200004fc:	4b0d      	ldr	r3, [pc, #52]	; (20000534 <ComBlk_IRQHandler+0x44>)
200004fe:	689b      	ldr	r3, [r3, #8]
20000500:	b2da      	uxtb	r2, r3
20000502:	79fb      	ldrb	r3, [r7, #7]
20000504:	4013      	ands	r3, r2
20000506:	71fb      	strb	r3, [r7, #7]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:370
    
    rcv_okay = status & RCVOKAY_MASK;
20000508:	79fb      	ldrb	r3, [r7, #7]
2000050a:	f003 0302 	and.w	r3, r3, #2
2000050e:	71bb      	strb	r3, [r7, #6]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:372
    
    if(rcv_okay)
20000510:	79bb      	ldrb	r3, [r7, #6]
20000512:	2b00      	cmp	r3, #0
20000514:	d001      	beq.n	2000051a <ComBlk_IRQHandler+0x2a>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:374
    {
        handle_rx_okay_irq();
20000516:	f000 f8e7 	bl	200006e8 <handle_rx_okay_irq>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:377
    }
        
    tx_okay = status & TXTOKAY_MASK;
2000051a:	79fb      	ldrb	r3, [r7, #7]
2000051c:	f003 0301 	and.w	r3, r3, #1
20000520:	717b      	strb	r3, [r7, #5]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:378
    if(tx_okay)
20000522:	797b      	ldrb	r3, [r7, #5]
20000524:	2b00      	cmp	r3, #0
20000526:	d001      	beq.n	2000052c <ComBlk_IRQHandler+0x3c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:380
    {
        handle_tx_okay_irq();
20000528:	f000 f806 	bl	20000538 <handle_tx_okay_irq>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:382
    }
}
2000052c:	bf00      	nop
2000052e:	3708      	adds	r7, #8
20000530:	46bd      	mov	sp, r7
20000532:	bd80      	pop	{r7, pc}
20000534:	40016000 	.word	0x40016000

20000538 <handle_tx_okay_irq>:
handle_tx_okay_irq():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:388

/*==============================================================================
 *
 */
static void handle_tx_okay_irq(void)
{
20000538:	b580      	push	{r7, lr}
2000053a:	b084      	sub	sp, #16
2000053c:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:389
    switch(g_comblk_state)
2000053e:	4b63      	ldr	r3, [pc, #396]	; (200006cc <handle_tx_okay_irq+0x194>)
20000540:	781b      	ldrb	r3, [r3, #0]
20000542:	2b05      	cmp	r3, #5
20000544:	d06d      	beq.n	20000622 <handle_tx_okay_irq+0xea>
20000546:	2b05      	cmp	r3, #5
20000548:	f300 80af 	bgt.w	200006aa <handle_tx_okay_irq+0x172>
2000054c:	2b01      	cmp	r3, #1
2000054e:	d002      	beq.n	20000556 <handle_tx_okay_irq+0x1e>
20000550:	2b02      	cmp	r3, #2
20000552:	d039      	beq.n	200005c8 <handle_tx_okay_irq+0x90>
20000554:	e0a9      	b.n	200006aa <handle_tx_okay_irq+0x172>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:396
        /*----------------------------------------------------------------------
         * The TX_OKAY interrupt should only be enabled for states COMBLK_TX_CMD
         * and COMBLK_TX_DATA.
         */
        case COMBLK_TX_CMD:
            if(g_comblk_cmd_size > 0u)
20000556:	4b5e      	ldr	r3, [pc, #376]	; (200006d0 <handle_tx_okay_irq+0x198>)
20000558:	881b      	ldrh	r3, [r3, #0]
2000055a:	b29b      	uxth	r3, r3
2000055c:	2b00      	cmp	r3, #0
2000055e:	d02f      	beq.n	200005c0 <handle_tx_okay_irq+0x88>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:399
            {
                uint32_t size_sent;
                size_sent = fill_tx_fifo(g_comblk_p_cmd, g_comblk_cmd_size);
20000560:	4b5c      	ldr	r3, [pc, #368]	; (200006d4 <handle_tx_okay_irq+0x19c>)
20000562:	681b      	ldr	r3, [r3, #0]
20000564:	4a5a      	ldr	r2, [pc, #360]	; (200006d0 <handle_tx_okay_irq+0x198>)
20000566:	8812      	ldrh	r2, [r2, #0]
20000568:	b292      	uxth	r2, r2
2000056a:	4611      	mov	r1, r2
2000056c:	4618      	mov	r0, r3
2000056e:	f000 fa09 	bl	20000984 <fill_tx_fifo>
20000572:	6078      	str	r0, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:400
                if(size_sent < g_comblk_cmd_size)
20000574:	4b56      	ldr	r3, [pc, #344]	; (200006d0 <handle_tx_okay_irq+0x198>)
20000576:	881b      	ldrh	r3, [r3, #0]
20000578:	b29b      	uxth	r3, r3
2000057a:	461a      	mov	r2, r3
2000057c:	687b      	ldr	r3, [r7, #4]
2000057e:	4293      	cmp	r3, r2
20000580:	d20f      	bcs.n	200005a2 <handle_tx_okay_irq+0x6a>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:402
                {
                    g_comblk_cmd_size = g_comblk_cmd_size - (uint16_t)size_sent;
20000582:	4b53      	ldr	r3, [pc, #332]	; (200006d0 <handle_tx_okay_irq+0x198>)
20000584:	881b      	ldrh	r3, [r3, #0]
20000586:	b29a      	uxth	r2, r3
20000588:	687b      	ldr	r3, [r7, #4]
2000058a:	b29b      	uxth	r3, r3
2000058c:	1ad3      	subs	r3, r2, r3
2000058e:	b29a      	uxth	r2, r3
20000590:	4b4f      	ldr	r3, [pc, #316]	; (200006d0 <handle_tx_okay_irq+0x198>)
20000592:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:403
                    g_comblk_p_cmd = &g_comblk_p_cmd[size_sent];
20000594:	4b4f      	ldr	r3, [pc, #316]	; (200006d4 <handle_tx_okay_irq+0x19c>)
20000596:	681a      	ldr	r2, [r3, #0]
20000598:	687b      	ldr	r3, [r7, #4]
2000059a:	4413      	add	r3, r2
2000059c:	4a4d      	ldr	r2, [pc, #308]	; (200006d4 <handle_tx_okay_irq+0x19c>)
2000059e:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:427
                 * or corrupted memory.
                 */
                ASSERT(0);
                abort_current_cmd();
            }
        break;
200005a0:	e090      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:407
                    g_comblk_cmd_size = 0u;
200005a2:	4b4b      	ldr	r3, [pc, #300]	; (200006d0 <handle_tx_okay_irq+0x198>)
200005a4:	2200      	movs	r2, #0
200005a6:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:408
                    if(g_comblk_data_size > 0u)
200005a8:	4b4b      	ldr	r3, [pc, #300]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
200005aa:	681b      	ldr	r3, [r3, #0]
200005ac:	2b00      	cmp	r3, #0
200005ae:	d003      	beq.n	200005b8 <handle_tx_okay_irq+0x80>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:410
                        g_comblk_state = COMBLK_TX_DATA;
200005b0:	4b46      	ldr	r3, [pc, #280]	; (200006cc <handle_tx_okay_irq+0x194>)
200005b2:	2202      	movs	r2, #2
200005b4:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:427
        break;
200005b6:	e085      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:414
                        g_comblk_state = COMBLK_WAIT_RESPONSE;
200005b8:	4b44      	ldr	r3, [pc, #272]	; (200006cc <handle_tx_okay_irq+0x194>)
200005ba:	2203      	movs	r2, #3
200005bc:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:427
        break;
200005be:	e081      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:424 (discriminator 1)
                ASSERT(0);
200005c0:	be00      	bkpt	0x0000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:425 (discriminator 1)
                abort_current_cmd();
200005c2:	f000 f9b9 	bl	20000938 <abort_current_cmd>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:427 (discriminator 1)
        break;
200005c6:	e07d      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:430
            
        case COMBLK_TX_DATA:
            if(g_comblk_data_size > 0u)
200005c8:	4b43      	ldr	r3, [pc, #268]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
200005ca:	681b      	ldr	r3, [r3, #0]
200005cc:	2b00      	cmp	r3, #0
200005ce:	d024      	beq.n	2000061a <handle_tx_okay_irq+0xe2>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:433
            {
                uint32_t size_sent;
                size_sent = fill_tx_fifo(g_comblk_p_data, g_comblk_data_size);
200005d0:	4b42      	ldr	r3, [pc, #264]	; (200006dc <handle_tx_okay_irq+0x1a4>)
200005d2:	681b      	ldr	r3, [r3, #0]
200005d4:	4a40      	ldr	r2, [pc, #256]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
200005d6:	6812      	ldr	r2, [r2, #0]
200005d8:	4611      	mov	r1, r2
200005da:	4618      	mov	r0, r3
200005dc:	f000 f9d2 	bl	20000984 <fill_tx_fifo>
200005e0:	60b8      	str	r0, [r7, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:434
                if(size_sent < g_comblk_data_size)
200005e2:	4b3d      	ldr	r3, [pc, #244]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
200005e4:	681b      	ldr	r3, [r3, #0]
200005e6:	68ba      	ldr	r2, [r7, #8]
200005e8:	429a      	cmp	r2, r3
200005ea:	d20c      	bcs.n	20000606 <handle_tx_okay_irq+0xce>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:436
                {
                    g_comblk_data_size = g_comblk_data_size - size_sent;
200005ec:	4b3a      	ldr	r3, [pc, #232]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
200005ee:	681a      	ldr	r2, [r3, #0]
200005f0:	68bb      	ldr	r3, [r7, #8]
200005f2:	1ad3      	subs	r3, r2, r3
200005f4:	4a38      	ldr	r2, [pc, #224]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
200005f6:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:437
                    g_comblk_p_data = &g_comblk_p_data[size_sent];
200005f8:	4b38      	ldr	r3, [pc, #224]	; (200006dc <handle_tx_okay_irq+0x1a4>)
200005fa:	681a      	ldr	r2, [r3, #0]
200005fc:	68bb      	ldr	r3, [r7, #8]
200005fe:	4413      	add	r3, r2
20000600:	4a36      	ldr	r2, [pc, #216]	; (200006dc <handle_tx_okay_irq+0x1a4>)
20000602:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:454
                 * or corrupted memory.
                 */
                ASSERT(0);
                abort_current_cmd();
            }
        break;
20000604:	e05e      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:441
                    COMBLK->INT_ENABLE &= ~TXTOKAY_MASK;
20000606:	4b36      	ldr	r3, [pc, #216]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
20000608:	689b      	ldr	r3, [r3, #8]
2000060a:	4a35      	ldr	r2, [pc, #212]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
2000060c:	f023 0301 	bic.w	r3, r3, #1
20000610:	6093      	str	r3, [r2, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:442
                    g_comblk_state = COMBLK_WAIT_RESPONSE;
20000612:	4b2e      	ldr	r3, [pc, #184]	; (200006cc <handle_tx_okay_irq+0x194>)
20000614:	2203      	movs	r2, #3
20000616:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:454
        break;
20000618:	e054      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:451 (discriminator 1)
                ASSERT(0);
2000061a:	be00      	bkpt	0x0000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:452 (discriminator 1)
                abort_current_cmd();
2000061c:	f000 f98c 	bl	20000938 <abort_current_cmd>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:454 (discriminator 1)
        break;
20000620:	e050      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:460
           
        case COMBLK_TX_PAGED_DATA:
            /*
             * Read a page of data if required.
             */
            if(0u == g_comblk_data_size)
20000622:	4b2d      	ldr	r3, [pc, #180]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
20000624:	681b      	ldr	r3, [r3, #0]
20000626:	2b00      	cmp	r3, #0
20000628:	d11b      	bne.n	20000662 <handle_tx_okay_irq+0x12a>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:462
            {
                if(g_comblk_page_handler != 0)
2000062a:	4b2e      	ldr	r3, [pc, #184]	; (200006e4 <handle_tx_okay_irq+0x1ac>)
2000062c:	681b      	ldr	r3, [r3, #0]
2000062e:	2b00      	cmp	r3, #0
20000630:	d014      	beq.n	2000065c <handle_tx_okay_irq+0x124>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:464
                {
                    g_comblk_data_size = g_comblk_page_handler(&g_comblk_p_data);
20000632:	4b2c      	ldr	r3, [pc, #176]	; (200006e4 <handle_tx_okay_irq+0x1ac>)
20000634:	681b      	ldr	r3, [r3, #0]
20000636:	4829      	ldr	r0, [pc, #164]	; (200006dc <handle_tx_okay_irq+0x1a4>)
20000638:	4798      	blx	r3
2000063a:	4603      	mov	r3, r0
2000063c:	4a26      	ldr	r2, [pc, #152]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
2000063e:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:465
                    if(0u == g_comblk_data_size)
20000640:	4b25      	ldr	r3, [pc, #148]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
20000642:	681b      	ldr	r3, [r3, #0]
20000644:	2b00      	cmp	r3, #0
20000646:	d10c      	bne.n	20000662 <handle_tx_okay_irq+0x12a>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:467
                    {
                        COMBLK->INT_ENABLE &= ~TXTOKAY_MASK;
20000648:	4b25      	ldr	r3, [pc, #148]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
2000064a:	689b      	ldr	r3, [r3, #8]
2000064c:	4a24      	ldr	r2, [pc, #144]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
2000064e:	f023 0301 	bic.w	r3, r3, #1
20000652:	6093      	str	r3, [r2, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:468
                        g_comblk_state = COMBLK_WAIT_RESPONSE;
20000654:	4b1d      	ldr	r3, [pc, #116]	; (200006cc <handle_tx_okay_irq+0x194>)
20000656:	2203      	movs	r2, #3
20000658:	701a      	strb	r2, [r3, #0]
2000065a:	e002      	b.n	20000662 <handle_tx_okay_irq+0x12a>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:473 (discriminator 1)
                    }
                }
                else
                {
                    ASSERT(0);
2000065c:	be00      	bkpt	0x0000
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:474 (discriminator 1)
                    abort_current_cmd();
2000065e:	f000 f96b 	bl	20000938 <abort_current_cmd>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:483
            /*
             * Transmit the page data or move to COMBLK_WAIT_RESPONSE state if
             * no further page data could be obtained by the call to the page
             * handler above.
             */
            if(0u == g_comblk_data_size)
20000662:	4b1d      	ldr	r3, [pc, #116]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
20000664:	681b      	ldr	r3, [r3, #0]
20000666:	2b00      	cmp	r3, #0
20000668:	d109      	bne.n	2000067e <handle_tx_okay_irq+0x146>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:485
            {
                COMBLK->INT_ENABLE &= ~TXTOKAY_MASK;
2000066a:	4b1d      	ldr	r3, [pc, #116]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
2000066c:	689b      	ldr	r3, [r3, #8]
2000066e:	4a1c      	ldr	r2, [pc, #112]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
20000670:	f023 0301 	bic.w	r3, r3, #1
20000674:	6093      	str	r3, [r2, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:486
                g_comblk_state = COMBLK_WAIT_RESPONSE;
20000676:	4b15      	ldr	r3, [pc, #84]	; (200006cc <handle_tx_okay_irq+0x194>)
20000678:	2203      	movs	r2, #3
2000067a:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:495
                uint32_t size_sent;
                size_sent = fill_tx_fifo(g_comblk_p_data, g_comblk_data_size);
                g_comblk_data_size = g_comblk_data_size - size_sent;
                g_comblk_p_data = &g_comblk_p_data[size_sent];
            }
        break;
2000067c:	e022      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:491
                size_sent = fill_tx_fifo(g_comblk_p_data, g_comblk_data_size);
2000067e:	4b17      	ldr	r3, [pc, #92]	; (200006dc <handle_tx_okay_irq+0x1a4>)
20000680:	681b      	ldr	r3, [r3, #0]
20000682:	4a15      	ldr	r2, [pc, #84]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
20000684:	6812      	ldr	r2, [r2, #0]
20000686:	4611      	mov	r1, r2
20000688:	4618      	mov	r0, r3
2000068a:	f000 f97b 	bl	20000984 <fill_tx_fifo>
2000068e:	60f8      	str	r0, [r7, #12]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:492
                g_comblk_data_size = g_comblk_data_size - size_sent;
20000690:	4b11      	ldr	r3, [pc, #68]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
20000692:	681a      	ldr	r2, [r3, #0]
20000694:	68fb      	ldr	r3, [r7, #12]
20000696:	1ad3      	subs	r3, r2, r3
20000698:	4a0f      	ldr	r2, [pc, #60]	; (200006d8 <handle_tx_okay_irq+0x1a0>)
2000069a:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:493
                g_comblk_p_data = &g_comblk_p_data[size_sent];
2000069c:	4b0f      	ldr	r3, [pc, #60]	; (200006dc <handle_tx_okay_irq+0x1a4>)
2000069e:	681a      	ldr	r2, [r3, #0]
200006a0:	68fb      	ldr	r3, [r7, #12]
200006a2:	4413      	add	r3, r2
200006a4:	4a0d      	ldr	r2, [pc, #52]	; (200006dc <handle_tx_okay_irq+0x1a4>)
200006a6:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:495
        break;
200006a8:	e00c      	b.n	200006c4 <handle_tx_okay_irq+0x18c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:508
        case COMBLK_WAIT_RESPONSE:
            /* Fall through */
        case COMBLK_RX_RESPONSE:
            /* Fall through */
        default:
            COMBLK->INT_ENABLE &= ~TXTOKAY_MASK;
200006aa:	4b0d      	ldr	r3, [pc, #52]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
200006ac:	689b      	ldr	r3, [r3, #8]
200006ae:	4a0c      	ldr	r2, [pc, #48]	; (200006e0 <handle_tx_okay_irq+0x1a8>)
200006b0:	f023 0301 	bic.w	r3, r3, #1
200006b4:	6093      	str	r3, [r2, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:509
            complete_request(0u);
200006b6:	2000      	movs	r0, #0
200006b8:	f000 f91e 	bl	200008f8 <complete_request>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:510
            g_comblk_state = COMBLK_IDLE;
200006bc:	4b03      	ldr	r3, [pc, #12]	; (200006cc <handle_tx_okay_irq+0x194>)
200006be:	2200      	movs	r2, #0
200006c0:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:511
        break;
200006c2:	bf00      	nop
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:513
    }
}
200006c4:	bf00      	nop
200006c6:	3710      	adds	r7, #16
200006c8:	46bd      	mov	sp, r7
200006ca:	bd80      	pop	{r7, pc}
200006cc:	20000f21 	.word	0x20000f21
200006d0:	20000f04 	.word	0x20000f04
200006d4:	20000f00 	.word	0x20000f00
200006d8:	20000f0c 	.word	0x20000f0c
200006dc:	20000f08 	.word	0x20000f08
200006e0:	40016000 	.word	0x40016000
200006e4:	20000f1c 	.word	0x20000f1c

200006e8 <handle_rx_okay_irq>:
handle_rx_okay_irq():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:519

/*==============================================================================
 *
 */
static void handle_rx_okay_irq(void)
{
200006e8:	b580      	push	{r7, lr}
200006ea:	b084      	sub	sp, #16
200006ec:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:524
    uint16_t data16;
    uint16_t is_command;
    uint8_t data8;
    
    data16 = (uint16_t)COMBLK->DATA8;
200006ee:	4b7c      	ldr	r3, [pc, #496]	; (200008e0 <handle_rx_okay_irq+0x1f8>)
200006f0:	691b      	ldr	r3, [r3, #16]
200006f2:	81fb      	strh	r3, [r7, #14]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:525
    is_command = data16 & DATA8_COMMAND_MASK;
200006f4:	89fb      	ldrh	r3, [r7, #14]
200006f6:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
200006fa:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
200006fe:	81bb      	strh	r3, [r7, #12]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:526
    data8 = (uint8_t)data16;
20000700:	89fb      	ldrh	r3, [r7, #14]
20000702:	72fb      	strb	r3, [r7, #11]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:528
            
    switch(g_comblk_state)
20000704:	4b77      	ldr	r3, [pc, #476]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
20000706:	781b      	ldrb	r3, [r3, #0]
20000708:	2b05      	cmp	r3, #5
2000070a:	f200 80d6 	bhi.w	200008ba <handle_rx_okay_irq+0x1d2>
2000070e:	a201      	add	r2, pc, #4	; (adr r2, 20000714 <handle_rx_okay_irq+0x2c>)
20000710:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
20000714:	2000072d 	.word	0x2000072d
20000718:	200008a7 	.word	0x200008a7
2000071c:	200008a7 	.word	0x200008a7
20000720:	20000785 	.word	0x20000785
20000724:	200007d3 	.word	0x200007d3
20000728:	2000087b 	.word	0x2000087b
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:536
        * MSS_COMBLK_init() enables the RCV_OKAY interrupt for the COMBLK_IDLE
        * state to receive the asynchronous power-on-reset from the system
        * controller.
        */
        case COMBLK_IDLE:
            if(is_command)
2000072c:	89bb      	ldrh	r3, [r7, #12]
2000072e:	2b00      	cmp	r3, #0
20000730:	f000 80ca 	beq.w	200008c8 <handle_rx_okay_irq+0x1e0>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:538
            {
                if(data8 != POR_DIGEST_ERROR_OPCODE)
20000734:	7afb      	ldrb	r3, [r7, #11]
20000736:	2bf1      	cmp	r3, #241	; 0xf1
20000738:	d006      	beq.n	20000748 <handle_rx_okay_irq+0x60>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:541
                {
                    uint8_t rxed_opcode;
                    rxed_opcode = data8;
2000073a:	7afb      	ldrb	r3, [r7, #11]
2000073c:	717b      	strb	r3, [r7, #5]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:542
                    process_sys_ctrl_command(rxed_opcode);
2000073e:	797b      	ldrb	r3, [r7, #5]
20000740:	4618      	mov	r0, r3
20000742:	f000 f94f 	bl	200009e4 <process_sys_ctrl_command>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:553
                    g_comblk_response_idx++;
                    g_comblk_p_response[g_comblk_response_idx] = 0x00u;                
                    g_comblk_state = COMBLK_RX_RESPONSE;
                }
            }
        break;
20000746:	e0bf      	b.n	200008c8 <handle_rx_okay_irq+0x1e0>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:546
                    g_comblk_response_idx = 0;
20000748:	4b67      	ldr	r3, [pc, #412]	; (200008e8 <handle_rx_okay_irq+0x200>)
2000074a:	2200      	movs	r2, #0
2000074c:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:547
                    g_comblk_p_response[g_comblk_response_idx] = data8;
2000074e:	4b67      	ldr	r3, [pc, #412]	; (200008ec <handle_rx_okay_irq+0x204>)
20000750:	681b      	ldr	r3, [r3, #0]
20000752:	4a65      	ldr	r2, [pc, #404]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000754:	8812      	ldrh	r2, [r2, #0]
20000756:	b292      	uxth	r2, r2
20000758:	4413      	add	r3, r2
2000075a:	7afa      	ldrb	r2, [r7, #11]
2000075c:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:548
                    g_comblk_response_idx++;
2000075e:	4b62      	ldr	r3, [pc, #392]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000760:	881b      	ldrh	r3, [r3, #0]
20000762:	b29b      	uxth	r3, r3
20000764:	3301      	adds	r3, #1
20000766:	b29a      	uxth	r2, r3
20000768:	4b5f      	ldr	r3, [pc, #380]	; (200008e8 <handle_rx_okay_irq+0x200>)
2000076a:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:549
                    g_comblk_p_response[g_comblk_response_idx] = 0x00u;                
2000076c:	4b5f      	ldr	r3, [pc, #380]	; (200008ec <handle_rx_okay_irq+0x204>)
2000076e:	681b      	ldr	r3, [r3, #0]
20000770:	4a5d      	ldr	r2, [pc, #372]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000772:	8812      	ldrh	r2, [r2, #0]
20000774:	b292      	uxth	r2, r2
20000776:	4413      	add	r3, r2
20000778:	2200      	movs	r2, #0
2000077a:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:550
                    g_comblk_state = COMBLK_RX_RESPONSE;
2000077c:	4b59      	ldr	r3, [pc, #356]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
2000077e:	2204      	movs	r2, #4
20000780:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:553
        break;
20000782:	e0a1      	b.n	200008c8 <handle_rx_okay_irq+0x1e0>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:560
        /*----------------------------------------------------------------------
         * The RCV_OKAY interrupt should only be enabled for states
         * COMBLK_WAIT_RESPONSE and COMBLK_RX_RESPONSE. 
         */
        case COMBLK_WAIT_RESPONSE:
            if(is_command)
20000784:	89bb      	ldrh	r3, [r7, #12]
20000786:	2b00      	cmp	r3, #0
20000788:	f000 80a0 	beq.w	200008cc <handle_rx_okay_irq+0x1e4>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:563
            {
                uint8_t rxed_opcode;
                rxed_opcode = data8;
2000078c:	7afb      	ldrb	r3, [r7, #11]
2000078e:	71fb      	strb	r3, [r7, #7]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:564
                if(rxed_opcode == g_comblk_cmd_opcode)
20000790:	4b57      	ldr	r3, [pc, #348]	; (200008f0 <handle_rx_okay_irq+0x208>)
20000792:	781b      	ldrb	r3, [r3, #0]
20000794:	b2db      	uxtb	r3, r3
20000796:	79fa      	ldrb	r2, [r7, #7]
20000798:	429a      	cmp	r2, r3
2000079a:	d115      	bne.n	200007c8 <handle_rx_okay_irq+0xe0>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:566
                {
                    g_comblk_response_idx = 0u;
2000079c:	4b52      	ldr	r3, [pc, #328]	; (200008e8 <handle_rx_okay_irq+0x200>)
2000079e:	2200      	movs	r2, #0
200007a0:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:567
                    g_comblk_p_response[g_comblk_response_idx] = rxed_opcode;
200007a2:	4b52      	ldr	r3, [pc, #328]	; (200008ec <handle_rx_okay_irq+0x204>)
200007a4:	681b      	ldr	r3, [r3, #0]
200007a6:	4a50      	ldr	r2, [pc, #320]	; (200008e8 <handle_rx_okay_irq+0x200>)
200007a8:	8812      	ldrh	r2, [r2, #0]
200007aa:	b292      	uxth	r2, r2
200007ac:	4413      	add	r3, r2
200007ae:	79fa      	ldrb	r2, [r7, #7]
200007b0:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:568
                    ++g_comblk_response_idx;
200007b2:	4b4d      	ldr	r3, [pc, #308]	; (200008e8 <handle_rx_okay_irq+0x200>)
200007b4:	881b      	ldrh	r3, [r3, #0]
200007b6:	b29b      	uxth	r3, r3
200007b8:	3301      	adds	r3, #1
200007ba:	b29a      	uxth	r2, r3
200007bc:	4b4a      	ldr	r3, [pc, #296]	; (200008e8 <handle_rx_okay_irq+0x200>)
200007be:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:569
                    g_comblk_state = COMBLK_RX_RESPONSE;
200007c0:	4b48      	ldr	r3, [pc, #288]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
200007c2:	2204      	movs	r2, #4
200007c4:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:576
                else
                {
                    process_sys_ctrl_command(rxed_opcode);
                }
            }
        break;
200007c6:	e081      	b.n	200008cc <handle_rx_okay_irq+0x1e4>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:573
                    process_sys_ctrl_command(rxed_opcode);
200007c8:	79fb      	ldrb	r3, [r7, #7]
200007ca:	4618      	mov	r0, r3
200007cc:	f000 f90a 	bl	200009e4 <process_sys_ctrl_command>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:576
        break;
200007d0:	e07c      	b.n	200008cc <handle_rx_okay_irq+0x1e4>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:579
            
        case COMBLK_RX_RESPONSE:
            if(is_command)
200007d2:	89bb      	ldrh	r3, [r7, #12]
200007d4:	2b00      	cmp	r3, #0
200007d6:	d006      	beq.n	200007e6 <handle_rx_okay_irq+0xfe>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:582
            {
                uint8_t rxed_opcode;
                rxed_opcode = data8;
200007d8:	7afb      	ldrb	r3, [r7, #11]
200007da:	723b      	strb	r3, [r7, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:583
                process_sys_ctrl_command(rxed_opcode);
200007dc:	7a3b      	ldrb	r3, [r7, #8]
200007de:	4618      	mov	r0, r3
200007e0:	f000 f900 	bl	200009e4 <process_sys_ctrl_command>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:611
                        complete_request(g_comblk_response_idx);
                        g_comblk_state = COMBLK_IDLE;
                    }
                }
            }
        break;
200007e4:	e074      	b.n	200008d0 <handle_rx_okay_irq+0x1e8>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:587
                if( g_comblk_p_response[g_comblk_response_idx-1] == POR_DIGEST_ERROR_OPCODE)
200007e6:	4b41      	ldr	r3, [pc, #260]	; (200008ec <handle_rx_okay_irq+0x204>)
200007e8:	681a      	ldr	r2, [r3, #0]
200007ea:	4b3f      	ldr	r3, [pc, #252]	; (200008e8 <handle_rx_okay_irq+0x200>)
200007ec:	881b      	ldrh	r3, [r3, #0]
200007ee:	b29b      	uxth	r3, r3
200007f0:	3b01      	subs	r3, #1
200007f2:	4413      	add	r3, r2
200007f4:	781b      	ldrb	r3, [r3, #0]
200007f6:	2bf1      	cmp	r3, #241	; 0xf1
200007f8:	d116      	bne.n	20000828 <handle_rx_okay_irq+0x140>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:589
                    g_comblk_p_response[g_comblk_response_idx] = data8;
200007fa:	4b3c      	ldr	r3, [pc, #240]	; (200008ec <handle_rx_okay_irq+0x204>)
200007fc:	681b      	ldr	r3, [r3, #0]
200007fe:	4a3a      	ldr	r2, [pc, #232]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000800:	8812      	ldrh	r2, [r2, #0]
20000802:	b292      	uxth	r2, r2
20000804:	4413      	add	r3, r2
20000806:	7afa      	ldrb	r2, [r7, #11]
20000808:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:590
                    process_sys_ctrl_command(g_comblk_p_response[g_comblk_response_idx-1]);
2000080a:	4b38      	ldr	r3, [pc, #224]	; (200008ec <handle_rx_okay_irq+0x204>)
2000080c:	681a      	ldr	r2, [r3, #0]
2000080e:	4b36      	ldr	r3, [pc, #216]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000810:	881b      	ldrh	r3, [r3, #0]
20000812:	b29b      	uxth	r3, r3
20000814:	3b01      	subs	r3, #1
20000816:	4413      	add	r3, r2
20000818:	781b      	ldrb	r3, [r3, #0]
2000081a:	4618      	mov	r0, r3
2000081c:	f000 f8e2 	bl	200009e4 <process_sys_ctrl_command>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:591
                    g_comblk_state = COMBLK_IDLE;
20000820:	4b30      	ldr	r3, [pc, #192]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
20000822:	2200      	movs	r2, #0
20000824:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:611
        break;
20000826:	e053      	b.n	200008d0 <handle_rx_okay_irq+0x1e8>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:595
                    if(g_comblk_response_idx < g_comblk_response_size)
20000828:	4b2f      	ldr	r3, [pc, #188]	; (200008e8 <handle_rx_okay_irq+0x200>)
2000082a:	881b      	ldrh	r3, [r3, #0]
2000082c:	b29a      	uxth	r2, r3
2000082e:	4b31      	ldr	r3, [pc, #196]	; (200008f4 <handle_rx_okay_irq+0x20c>)
20000830:	881b      	ldrh	r3, [r3, #0]
20000832:	429a      	cmp	r2, r3
20000834:	d210      	bcs.n	20000858 <handle_rx_okay_irq+0x170>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:599
                        rxed_data = data8;
20000836:	7afb      	ldrb	r3, [r7, #11]
20000838:	727b      	strb	r3, [r7, #9]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:600
                        g_comblk_p_response[g_comblk_response_idx] = rxed_data;
2000083a:	4b2c      	ldr	r3, [pc, #176]	; (200008ec <handle_rx_okay_irq+0x204>)
2000083c:	681b      	ldr	r3, [r3, #0]
2000083e:	4a2a      	ldr	r2, [pc, #168]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000840:	8812      	ldrh	r2, [r2, #0]
20000842:	b292      	uxth	r2, r2
20000844:	4413      	add	r3, r2
20000846:	7a7a      	ldrb	r2, [r7, #9]
20000848:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:601
                        ++g_comblk_response_idx;
2000084a:	4b27      	ldr	r3, [pc, #156]	; (200008e8 <handle_rx_okay_irq+0x200>)
2000084c:	881b      	ldrh	r3, [r3, #0]
2000084e:	b29b      	uxth	r3, r3
20000850:	3301      	adds	r3, #1
20000852:	b29a      	uxth	r2, r3
20000854:	4b24      	ldr	r3, [pc, #144]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000856:	801a      	strh	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:604
                    if(g_comblk_response_idx == g_comblk_response_size)
20000858:	4b23      	ldr	r3, [pc, #140]	; (200008e8 <handle_rx_okay_irq+0x200>)
2000085a:	881b      	ldrh	r3, [r3, #0]
2000085c:	b29a      	uxth	r2, r3
2000085e:	4b25      	ldr	r3, [pc, #148]	; (200008f4 <handle_rx_okay_irq+0x20c>)
20000860:	881b      	ldrh	r3, [r3, #0]
20000862:	429a      	cmp	r2, r3
20000864:	d134      	bne.n	200008d0 <handle_rx_okay_irq+0x1e8>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:606
                        complete_request(g_comblk_response_idx);
20000866:	4b20      	ldr	r3, [pc, #128]	; (200008e8 <handle_rx_okay_irq+0x200>)
20000868:	881b      	ldrh	r3, [r3, #0]
2000086a:	b29b      	uxth	r3, r3
2000086c:	4618      	mov	r0, r3
2000086e:	f000 f843 	bl	200008f8 <complete_request>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:607
                        g_comblk_state = COMBLK_IDLE;
20000872:	4b1c      	ldr	r3, [pc, #112]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
20000874:	2200      	movs	r2, #0
20000876:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:611
        break;
20000878:	e02a      	b.n	200008d0 <handle_rx_okay_irq+0x1e8>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:619
         * The RCV_OKAY interrupt should NOT be enabled for states
         * COMBLK_IDLE, COMBLK_TX_CMD and COMBLK_TX_DATA.
         */
        case COMBLK_TX_PAGED_DATA:
            /* This is needed because when there is an error, we need to terminate loading the data */
            if(!is_command)
2000087a:	89bb      	ldrh	r3, [r7, #12]
2000087c:	2b00      	cmp	r3, #0
2000087e:	d10b      	bne.n	20000898 <handle_rx_okay_irq+0x1b0>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:621
            {
                g_comblk_p_response[1] = data8;
20000880:	4b1a      	ldr	r3, [pc, #104]	; (200008ec <handle_rx_okay_irq+0x204>)
20000882:	681b      	ldr	r3, [r3, #0]
20000884:	3301      	adds	r3, #1
20000886:	7afa      	ldrb	r2, [r7, #11]
20000888:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:622
                complete_request(2u);
2000088a:	2002      	movs	r0, #2
2000088c:	f000 f834 	bl	200008f8 <complete_request>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:623
                g_comblk_state = COMBLK_IDLE;
20000890:	4b14      	ldr	r3, [pc, #80]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
20000892:	2200      	movs	r2, #0
20000894:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:631
            {
                uint8_t rxed_opcode;
                rxed_opcode = data8;
                process_sys_ctrl_command(rxed_opcode);
            }
        break;
20000896:	e01e      	b.n	200008d6 <handle_rx_okay_irq+0x1ee>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:628
                rxed_opcode = data8;
20000898:	7afb      	ldrb	r3, [r7, #11]
2000089a:	72bb      	strb	r3, [r7, #10]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:629
                process_sys_ctrl_command(rxed_opcode);
2000089c:	7abb      	ldrb	r3, [r7, #10]
2000089e:	4618      	mov	r0, r3
200008a0:	f000 f8a0 	bl	200009e4 <process_sys_ctrl_command>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:631
        break;
200008a4:	e017      	b.n	200008d6 <handle_rx_okay_irq+0x1ee>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:637
        
        case COMBLK_TX_CMD:
            /* Fall through */
        case COMBLK_TX_DATA:
            /* Fall through */
            if(is_command)
200008a6:	89bb      	ldrh	r3, [r7, #12]
200008a8:	2b00      	cmp	r3, #0
200008aa:	d013      	beq.n	200008d4 <handle_rx_okay_irq+0x1ec>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:640
            {
                uint8_t rxed_opcode;
                rxed_opcode = data8;
200008ac:	7afb      	ldrb	r3, [r7, #11]
200008ae:	71bb      	strb	r3, [r7, #6]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:641
                process_sys_ctrl_command(rxed_opcode);
200008b0:	79bb      	ldrb	r3, [r7, #6]
200008b2:	4618      	mov	r0, r3
200008b4:	f000 f896 	bl	200009e4 <process_sys_ctrl_command>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:643
            }
        break;
200008b8:	e00c      	b.n	200008d4 <handle_rx_okay_irq+0x1ec>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:646
        
        default:
            complete_request(0u);
200008ba:	2000      	movs	r0, #0
200008bc:	f000 f81c 	bl	200008f8 <complete_request>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:647
            g_comblk_state = COMBLK_IDLE;
200008c0:	4b08      	ldr	r3, [pc, #32]	; (200008e4 <handle_rx_okay_irq+0x1fc>)
200008c2:	2200      	movs	r2, #0
200008c4:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:648
        break;
200008c6:	e006      	b.n	200008d6 <handle_rx_okay_irq+0x1ee>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:553
        break;
200008c8:	bf00      	nop
200008ca:	e004      	b.n	200008d6 <handle_rx_okay_irq+0x1ee>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:576
        break;
200008cc:	bf00      	nop
200008ce:	e002      	b.n	200008d6 <handle_rx_okay_irq+0x1ee>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:611
        break;
200008d0:	bf00      	nop
200008d2:	e000      	b.n	200008d6 <handle_rx_okay_irq+0x1ee>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:643
        break;
200008d4:	bf00      	nop
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:650
    }
}
200008d6:	bf00      	nop
200008d8:	3710      	adds	r7, #16
200008da:	46bd      	mov	sp, r7
200008dc:	bd80      	pop	{r7, pc}
200008de:	bf00      	nop
200008e0:	40016000 	.word	0x40016000
200008e4:	20000f21 	.word	0x20000f21
200008e8:	20000f16 	.word	0x20000f16
200008ec:	20000f10 	.word	0x20000f10
200008f0:	20000efc 	.word	0x20000efc
200008f4:	20000f14 	.word	0x20000f14

200008f8 <complete_request>:
complete_request():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:659
 */
static void complete_request
(
    uint16_t response_length
)
{
200008f8:	b580      	push	{r7, lr}
200008fa:	b082      	sub	sp, #8
200008fc:	af00      	add	r7, sp, #0
200008fe:	4603      	mov	r3, r0
20000900:	80fb      	strh	r3, [r7, #6]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:660
    if(g_comblk_completion_handler != 0)
20000902:	4b0a      	ldr	r3, [pc, #40]	; (2000092c <complete_request+0x34>)
20000904:	681b      	ldr	r3, [r3, #0]
20000906:	2b00      	cmp	r3, #0
20000908:	d00c      	beq.n	20000924 <complete_request+0x2c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:662
    {
        g_comblk_completion_handler(g_comblk_p_response, response_length);
2000090a:	4b08      	ldr	r3, [pc, #32]	; (2000092c <complete_request+0x34>)
2000090c:	681b      	ldr	r3, [r3, #0]
2000090e:	4a08      	ldr	r2, [pc, #32]	; (20000930 <complete_request+0x38>)
20000910:	6812      	ldr	r2, [r2, #0]
20000912:	88f9      	ldrh	r1, [r7, #6]
20000914:	4610      	mov	r0, r2
20000916:	4798      	blx	r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:663
        g_comblk_completion_handler = 0;
20000918:	4b04      	ldr	r3, [pc, #16]	; (2000092c <complete_request+0x34>)
2000091a:	2200      	movs	r2, #0
2000091c:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:664
        g_request_in_progress = 0u;
2000091e:	4b05      	ldr	r3, [pc, #20]	; (20000934 <complete_request+0x3c>)
20000920:	2200      	movs	r2, #0
20000922:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:666
    }
}
20000924:	bf00      	nop
20000926:	3708      	adds	r7, #8
20000928:	46bd      	mov	sp, r7
2000092a:	bd80      	pop	{r7, pc}
2000092c:	20000f18 	.word	0x20000f18
20000930:	20000f10 	.word	0x20000f10
20000934:	20000f20 	.word	0x20000f20

20000938 <abort_current_cmd>:
abort_current_cmd():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:672

/*==============================================================================
 *
 */
static void abort_current_cmd(void)
{
20000938:	b580      	push	{r7, lr}
2000093a:	b082      	sub	sp, #8
2000093c:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:673
    if(g_request_in_progress)
2000093e:	4b0e      	ldr	r3, [pc, #56]	; (20000978 <abort_current_cmd+0x40>)
20000940:	781b      	ldrb	r3, [r3, #0]
20000942:	b2db      	uxtb	r3, r3
20000944:	2b00      	cmp	r3, #0
20000946:	d013      	beq.n	20000970 <abort_current_cmd+0x38>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:681
        
        /*
         * Call completion handler just in case we are in a multi threaded system
         * to avoid a task lockup.
         */
        complete_request(g_comblk_response_idx);
20000948:	4b0c      	ldr	r3, [pc, #48]	; (2000097c <abort_current_cmd+0x44>)
2000094a:	881b      	ldrh	r3, [r3, #0]
2000094c:	b29b      	uxth	r3, r3
2000094e:	4618      	mov	r0, r3
20000950:	f7ff ffd2 	bl	200008f8 <complete_request>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:686
        
        /*
         * Flush the FIFOs
         */
        COMBLK->CONTROL |= CR_FLUSHOUT_MASK;
20000954:	4b0a      	ldr	r3, [pc, #40]	; (20000980 <abort_current_cmd+0x48>)
20000956:	681b      	ldr	r3, [r3, #0]
20000958:	4a09      	ldr	r2, [pc, #36]	; (20000980 <abort_current_cmd+0x48>)
2000095a:	f043 0301 	orr.w	r3, r3, #1
2000095e:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:688 (discriminator 1)
        do {
            flush_in_progress = COMBLK->CONTROL & CR_FLUSHOUT_MASK;
20000960:	4b07      	ldr	r3, [pc, #28]	; (20000980 <abort_current_cmd+0x48>)
20000962:	681b      	ldr	r3, [r3, #0]
20000964:	f003 0301 	and.w	r3, r3, #1
20000968:	607b      	str	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:689 (discriminator 1)
        } while(flush_in_progress);
2000096a:	687b      	ldr	r3, [r7, #4]
2000096c:	2b00      	cmp	r3, #0
2000096e:	d1f7      	bne.n	20000960 <abort_current_cmd+0x28>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:691
    }
}
20000970:	bf00      	nop
20000972:	3708      	adds	r7, #8
20000974:	46bd      	mov	sp, r7
20000976:	bd80      	pop	{r7, pc}
20000978:	20000f20 	.word	0x20000f20
2000097c:	20000f16 	.word	0x20000f16
20000980:	40016000 	.word	0x40016000

20000984 <fill_tx_fifo>:
fill_tx_fifo():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:723
static uint32_t fill_tx_fifo
(
    const uint8_t * p_cmd,
    uint32_t cmd_size
)
{
20000984:	b480      	push	{r7}
20000986:	b085      	sub	sp, #20
20000988:	af00      	add	r7, sp, #0
2000098a:	6078      	str	r0, [r7, #4]
2000098c:	6039      	str	r1, [r7, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:728
    volatile uint32_t tx_okay;
    uint32_t size_sent;

    /* Set transmit FIFO to transfer bytes. */
    COMBLK->CONTROL &= ~CR_SIZETX_MASK;
2000098e:	4b14      	ldr	r3, [pc, #80]	; (200009e0 <fill_tx_fifo+0x5c>)
20000990:	681b      	ldr	r3, [r3, #0]
20000992:	4a13      	ldr	r2, [pc, #76]	; (200009e0 <fill_tx_fifo+0x5c>)
20000994:	f023 0304 	bic.w	r3, r3, #4
20000998:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:730
    
    size_sent = 0u;
2000099a:	2300      	movs	r3, #0
2000099c:	60fb      	str	r3, [r7, #12]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:731
    tx_okay = COMBLK->STATUS & TXTOKAY_MASK;
2000099e:	4b10      	ldr	r3, [pc, #64]	; (200009e0 <fill_tx_fifo+0x5c>)
200009a0:	685b      	ldr	r3, [r3, #4]
200009a2:	f003 0301 	and.w	r3, r3, #1
200009a6:	60bb      	str	r3, [r7, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:732
    while((tx_okay != 0u) && (size_sent < cmd_size))
200009a8:	e00d      	b.n	200009c6 <fill_tx_fifo+0x42>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:734
    {
        COMBLK->DATA8 = p_cmd[size_sent];
200009aa:	687a      	ldr	r2, [r7, #4]
200009ac:	68fb      	ldr	r3, [r7, #12]
200009ae:	4413      	add	r3, r2
200009b0:	781a      	ldrb	r2, [r3, #0]
200009b2:	4b0b      	ldr	r3, [pc, #44]	; (200009e0 <fill_tx_fifo+0x5c>)
200009b4:	611a      	str	r2, [r3, #16]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:735
        ++size_sent;
200009b6:	68fb      	ldr	r3, [r7, #12]
200009b8:	3301      	adds	r3, #1
200009ba:	60fb      	str	r3, [r7, #12]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:736
        tx_okay = COMBLK->STATUS & TXTOKAY_MASK;
200009bc:	4b08      	ldr	r3, [pc, #32]	; (200009e0 <fill_tx_fifo+0x5c>)
200009be:	685b      	ldr	r3, [r3, #4]
200009c0:	f003 0301 	and.w	r3, r3, #1
200009c4:	60bb      	str	r3, [r7, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:732
    while((tx_okay != 0u) && (size_sent < cmd_size))
200009c6:	68bb      	ldr	r3, [r7, #8]
200009c8:	2b00      	cmp	r3, #0
200009ca:	d003      	beq.n	200009d4 <fill_tx_fifo+0x50>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:732 (discriminator 1)
200009cc:	68fa      	ldr	r2, [r7, #12]
200009ce:	683b      	ldr	r3, [r7, #0]
200009d0:	429a      	cmp	r2, r3
200009d2:	d3ea      	bcc.n	200009aa <fill_tx_fifo+0x26>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:739
    }
    
    return size_sent;
200009d4:	68fb      	ldr	r3, [r7, #12]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:740
}
200009d6:	4618      	mov	r0, r3
200009d8:	3714      	adds	r7, #20
200009da:	46bd      	mov	sp, r7
200009dc:	bc80      	pop	{r7}
200009de:	4770      	bx	lr
200009e0:	40016000 	.word	0x40016000

200009e4 <process_sys_ctrl_command>:
process_sys_ctrl_command():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:746

/*==============================================================================
 *
 */
static void process_sys_ctrl_command(uint8_t cmd_opcode)
{
200009e4:	b580      	push	{r7, lr}
200009e6:	b082      	sub	sp, #8
200009e8:	af00      	add	r7, sp, #0
200009ea:	4603      	mov	r3, r0
200009ec:	71fb      	strb	r3, [r7, #7]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:747
    if(g_async_event_handler != 0)
200009ee:	4b06      	ldr	r3, [pc, #24]	; (20000a08 <process_sys_ctrl_command+0x24>)
200009f0:	681b      	ldr	r3, [r3, #0]
200009f2:	2b00      	cmp	r3, #0
200009f4:	d004      	beq.n	20000a00 <process_sys_ctrl_command+0x1c>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:749
    {
        g_async_event_handler(cmd_opcode);
200009f6:	4b04      	ldr	r3, [pc, #16]	; (20000a08 <process_sys_ctrl_command+0x24>)
200009f8:	681b      	ldr	r3, [r3, #0]
200009fa:	79fa      	ldrb	r2, [r7, #7]
200009fc:	4610      	mov	r0, r2
200009fe:	4798      	blx	r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_sys_services/mss_comblk.c:751
    }
}
20000a00:	bf00      	nop
20000a02:	3708      	adds	r7, #8
20000a04:	46bd      	mov	sp, r7
20000a06:	bd80      	pop	{r7, pc}
20000a08:	20000f24 	.word	0x20000f24

20000a0c <start_transfer>:
start_transfer():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:197
    uint32_t src_addr,
    uint32_t dest_addr,
    uint32_t transfer_size,
    uint8_t transfer_dir
)
{
20000a0c:	b480      	push	{r7}
20000a0e:	b085      	sub	sp, #20
20000a10:	af00      	add	r7, sp, #0
20000a12:	60f8      	str	r0, [r7, #12]
20000a14:	60b9      	str	r1, [r7, #8]
20000a16:	607a      	str	r2, [r7, #4]
20000a18:	70fb      	strb	r3, [r7, #3]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:199
    /* Set descriptor transfer direction */
    HPDMA_BITBAND->Descriptor[g_hpdma_end_desc].HPDMACR_DCP_XFR_DIR = transfer_dir;
20000a1a:	484d      	ldr	r0, [pc, #308]	; (20000b50 <start_transfer+0x144>)
20000a1c:	4b4d      	ldr	r3, [pc, #308]	; (20000b54 <start_transfer+0x148>)
20000a1e:	681a      	ldr	r2, [r3, #0]
20000a20:	78f9      	ldrb	r1, [r7, #3]
20000a22:	4613      	mov	r3, r2
20000a24:	009b      	lsls	r3, r3, #2
20000a26:	4413      	add	r3, r2
20000a28:	01db      	lsls	r3, r3, #7
20000a2a:	4403      	add	r3, r0
20000a2c:	f503 73e2 	add.w	r3, r3, #452	; 0x1c4
20000a30:	6019      	str	r1, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:202
    
    /* Store Source and destination Address */
    HPDMA->Descriptor[g_hpdma_end_desc].HPDMASAR_REG = src_addr;
20000a32:	4949      	ldr	r1, [pc, #292]	; (20000b58 <start_transfer+0x14c>)
20000a34:	4b47      	ldr	r3, [pc, #284]	; (20000b54 <start_transfer+0x148>)
20000a36:	681a      	ldr	r2, [r3, #0]
20000a38:	4613      	mov	r3, r2
20000a3a:	009b      	lsls	r3, r3, #2
20000a3c:	4413      	add	r3, r2
20000a3e:	009b      	lsls	r3, r3, #2
20000a40:	440b      	add	r3, r1
20000a42:	3304      	adds	r3, #4
20000a44:	68fa      	ldr	r2, [r7, #12]
20000a46:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:203
    HPDMA->Descriptor[g_hpdma_end_desc].HPDMADAR_REG = dest_addr;
20000a48:	4943      	ldr	r1, [pc, #268]	; (20000b58 <start_transfer+0x14c>)
20000a4a:	4b42      	ldr	r3, [pc, #264]	; (20000b54 <start_transfer+0x148>)
20000a4c:	681a      	ldr	r2, [r3, #0]
20000a4e:	4613      	mov	r3, r2
20000a50:	009b      	lsls	r3, r3, #2
20000a52:	4413      	add	r3, r2
20000a54:	009b      	lsls	r3, r3, #2
20000a56:	440b      	add	r3, r1
20000a58:	3308      	adds	r3, #8
20000a5a:	68ba      	ldr	r2, [r7, #8]
20000a5c:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:206
    
    /* Set the transfer size to 64K */
    HPDMA->Descriptor[g_hpdma_end_desc].HPDMACR_REG &= HPDMA_XFR_SIZE_MASK;
20000a5e:	493e      	ldr	r1, [pc, #248]	; (20000b58 <start_transfer+0x14c>)
20000a60:	4b3c      	ldr	r3, [pc, #240]	; (20000b54 <start_transfer+0x148>)
20000a62:	681a      	ldr	r2, [r3, #0]
20000a64:	4613      	mov	r3, r2
20000a66:	009b      	lsls	r3, r3, #2
20000a68:	4413      	add	r3, r2
20000a6a:	009b      	lsls	r3, r3, #2
20000a6c:	440b      	add	r3, r1
20000a6e:	330c      	adds	r3, #12
20000a70:	681b      	ldr	r3, [r3, #0]
20000a72:	4839      	ldr	r0, [pc, #228]	; (20000b58 <start_transfer+0x14c>)
20000a74:	4a37      	ldr	r2, [pc, #220]	; (20000b54 <start_transfer+0x148>)
20000a76:	6811      	ldr	r1, [r2, #0]
20000a78:	0c1a      	lsrs	r2, r3, #16
20000a7a:	0412      	lsls	r2, r2, #16
20000a7c:	460b      	mov	r3, r1
20000a7e:	009b      	lsls	r3, r3, #2
20000a80:	440b      	add	r3, r1
20000a82:	009b      	lsls	r3, r3, #2
20000a84:	4403      	add	r3, r0
20000a86:	330c      	adds	r3, #12
20000a88:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:208
    
    if(transfer_size > MAX_SIZE_PER_DMA_XFR)
20000a8a:	687b      	ldr	r3, [r7, #4]
20000a8c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
20000a90:	d90f      	bls.n	20000ab2 <start_transfer+0xa6>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:210
    {
        g_transfer.xfr_size = transfer_size - MAX_SIZE_PER_DMA_XFR;
20000a92:	687b      	ldr	r3, [r7, #4]
20000a94:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
20000a98:	4a30      	ldr	r2, [pc, #192]	; (20000b5c <start_transfer+0x150>)
20000a9a:	6113      	str	r3, [r2, #16]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:211
        g_transfer.des_addr = dest_addr + MAX_SIZE_PER_DMA_XFR;
20000a9c:	68bb      	ldr	r3, [r7, #8]
20000a9e:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
20000aa2:	4a2e      	ldr	r2, [pc, #184]	; (20000b5c <start_transfer+0x150>)
20000aa4:	60d3      	str	r3, [r2, #12]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:212
        g_transfer.src_addr = src_addr + MAX_SIZE_PER_DMA_XFR; 
20000aa6:	68fb      	ldr	r3, [r7, #12]
20000aa8:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
20000aac:	4a2b      	ldr	r2, [pc, #172]	; (20000b5c <start_transfer+0x150>)
20000aae:	6093      	str	r3, [r2, #8]
20000ab0:	e01a      	b.n	20000ae8 <start_transfer+0xdc>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:217
    }
    else
    {
        /* Set descriptor transfer size */
        HPDMA->Descriptor[g_hpdma_end_desc].HPDMACR_REG |= (uint16_t)transfer_size;
20000ab2:	4929      	ldr	r1, [pc, #164]	; (20000b58 <start_transfer+0x14c>)
20000ab4:	4b27      	ldr	r3, [pc, #156]	; (20000b54 <start_transfer+0x148>)
20000ab6:	681a      	ldr	r2, [r3, #0]
20000ab8:	4613      	mov	r3, r2
20000aba:	009b      	lsls	r3, r3, #2
20000abc:	4413      	add	r3, r2
20000abe:	009b      	lsls	r3, r3, #2
20000ac0:	440b      	add	r3, r1
20000ac2:	330c      	adds	r3, #12
20000ac4:	681b      	ldr	r3, [r3, #0]
20000ac6:	687a      	ldr	r2, [r7, #4]
20000ac8:	b292      	uxth	r2, r2
20000aca:	4611      	mov	r1, r2
20000acc:	4822      	ldr	r0, [pc, #136]	; (20000b58 <start_transfer+0x14c>)
20000ace:	4a21      	ldr	r2, [pc, #132]	; (20000b54 <start_transfer+0x148>)
20000ad0:	6812      	ldr	r2, [r2, #0]
20000ad2:	4319      	orrs	r1, r3
20000ad4:	4613      	mov	r3, r2
20000ad6:	009b      	lsls	r3, r3, #2
20000ad8:	4413      	add	r3, r2
20000ada:	009b      	lsls	r3, r3, #2
20000adc:	4403      	add	r3, r0
20000ade:	330c      	adds	r3, #12
20000ae0:	6019      	str	r1, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:218
        g_transfer.xfr_size = 0u;     
20000ae2:	4b1e      	ldr	r3, [pc, #120]	; (20000b5c <start_transfer+0x150>)
20000ae4:	2200      	movs	r2, #0
20000ae6:	611a      	str	r2, [r3, #16]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:221
    }    
    /* Enable interrupts for the requested descriptor. */
    HPDMA->Descriptor[g_hpdma_end_desc].HPDMACR_REG |= HPDMACR_ALL_IRQ_ENABLE_MASK;       
20000ae8:	491b      	ldr	r1, [pc, #108]	; (20000b58 <start_transfer+0x14c>)
20000aea:	4b1a      	ldr	r3, [pc, #104]	; (20000b54 <start_transfer+0x148>)
20000aec:	681a      	ldr	r2, [r3, #0]
20000aee:	4613      	mov	r3, r2
20000af0:	009b      	lsls	r3, r3, #2
20000af2:	4413      	add	r3, r2
20000af4:	009b      	lsls	r3, r3, #2
20000af6:	440b      	add	r3, r1
20000af8:	330c      	adds	r3, #12
20000afa:	681b      	ldr	r3, [r3, #0]
20000afc:	4816      	ldr	r0, [pc, #88]	; (20000b58 <start_transfer+0x14c>)
20000afe:	4a15      	ldr	r2, [pc, #84]	; (20000b54 <start_transfer+0x148>)
20000b00:	6812      	ldr	r2, [r2, #0]
20000b02:	f443 01e0 	orr.w	r1, r3, #7340032	; 0x700000
20000b06:	4613      	mov	r3, r2
20000b08:	009b      	lsls	r3, r3, #2
20000b0a:	4413      	add	r3, r2
20000b0c:	009b      	lsls	r3, r3, #2
20000b0e:	4403      	add	r3, r0
20000b10:	330c      	adds	r3, #12
20000b12:	6019      	str	r1, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:223
    /* Set valid descriptor to start transfer */
    HPDMA_BITBAND->Descriptor[g_hpdma_end_desc].HPDMACR_DCP_VALID = HPDMA_ENABLE;  
20000b14:	490e      	ldr	r1, [pc, #56]	; (20000b50 <start_transfer+0x144>)
20000b16:	4b0f      	ldr	r3, [pc, #60]	; (20000b54 <start_transfer+0x148>)
20000b18:	681a      	ldr	r2, [r3, #0]
20000b1a:	4613      	mov	r3, r2
20000b1c:	009b      	lsls	r3, r3, #2
20000b1e:	4413      	add	r3, r2
20000b20:	01db      	lsls	r3, r3, #7
20000b22:	440b      	add	r3, r1
20000b24:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
20000b28:	2201      	movs	r2, #1
20000b2a:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:225
    /* Start transfer */
    HPDMA_BITBAND->Descriptor[g_hpdma_end_desc].HPDMACR_DCP_PAUSE = HPDMA_DISABLE;        
20000b2c:	4908      	ldr	r1, [pc, #32]	; (20000b50 <start_transfer+0x144>)
20000b2e:	4b09      	ldr	r3, [pc, #36]	; (20000b54 <start_transfer+0x148>)
20000b30:	681a      	ldr	r2, [r3, #0]
20000b32:	4613      	mov	r3, r2
20000b34:	009b      	lsls	r3, r3, #2
20000b36:	4413      	add	r3, r2
20000b38:	01db      	lsls	r3, r3, #7
20000b3a:	440b      	add	r3, r1
20000b3c:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
20000b40:	2200      	movs	r2, #0
20000b42:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:226
}
20000b44:	bf00      	nop
20000b46:	3714      	adds	r7, #20
20000b48:	46bd      	mov	sp, r7
20000b4a:	bc80      	pop	{r7}
20000b4c:	4770      	bx	lr
20000b4e:	bf00      	nop
20000b50:	42280000 	.word	0x42280000
20000b54:	20000f40 	.word	0x20000f40
20000b58:	40014000 	.word	0x40014000
20000b5c:	20000f28 	.word	0x20000f28

20000b60 <HPDMA_Complete_IRQHandler>:
HPDMA_Complete_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:313
#if defined(__GNUC__)
__attribute__((__interrupt__)) void HPDMA_Complete_IRQHandler(void)
#else
void HPDMA_Complete_IRQHandler(void)
#endif 
{
20000b60:	4668      	mov	r0, sp
20000b62:	f020 0107 	bic.w	r1, r0, #7
20000b66:	468d      	mov	sp, r1
20000b68:	b589      	push	{r0, r3, r7, lr}
20000b6a:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:315
    /* Clear interrupt */
    HPDMA_BITBAND->HPDMAICR_CLR_XFR_INT[g_hpdma_current_desc] = HPDMA_ENABLE;
20000b6c:	4a35      	ldr	r2, [pc, #212]	; (20000c44 <HPDMA_Complete_IRQHandler+0xe4>)
20000b6e:	4b36      	ldr	r3, [pc, #216]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000b70:	681b      	ldr	r3, [r3, #0]
20000b72:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
20000b76:	2101      	movs	r1, #1
20000b78:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:317
    /* Disable interrupts */
    HPDMA->Descriptor[g_hpdma_current_desc].HPDMACR_REG &= ~HPDMACR_ALL_IRQ_ENABLE_MASK;
20000b7c:	4933      	ldr	r1, [pc, #204]	; (20000c4c <HPDMA_Complete_IRQHandler+0xec>)
20000b7e:	4b32      	ldr	r3, [pc, #200]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000b80:	681a      	ldr	r2, [r3, #0]
20000b82:	4613      	mov	r3, r2
20000b84:	009b      	lsls	r3, r3, #2
20000b86:	4413      	add	r3, r2
20000b88:	009b      	lsls	r3, r3, #2
20000b8a:	440b      	add	r3, r1
20000b8c:	330c      	adds	r3, #12
20000b8e:	681b      	ldr	r3, [r3, #0]
20000b90:	482e      	ldr	r0, [pc, #184]	; (20000c4c <HPDMA_Complete_IRQHandler+0xec>)
20000b92:	4a2d      	ldr	r2, [pc, #180]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000b94:	6812      	ldr	r2, [r2, #0]
20000b96:	f423 01e0 	bic.w	r1, r3, #7340032	; 0x700000
20000b9a:	4613      	mov	r3, r2
20000b9c:	009b      	lsls	r3, r3, #2
20000b9e:	4413      	add	r3, r2
20000ba0:	009b      	lsls	r3, r3, #2
20000ba2:	4403      	add	r3, r0
20000ba4:	330c      	adds	r3, #12
20000ba6:	6019      	str	r1, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:319
    
    ++g_hpdma_current_desc;
20000ba8:	4b27      	ldr	r3, [pc, #156]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000baa:	681b      	ldr	r3, [r3, #0]
20000bac:	3301      	adds	r3, #1
20000bae:	4a26      	ldr	r2, [pc, #152]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000bb0:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:321
    
    if(NO_OF_HPDMA_DESCRIPTORS == g_hpdma_current_desc)
20000bb2:	4b25      	ldr	r3, [pc, #148]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000bb4:	681b      	ldr	r3, [r3, #0]
20000bb6:	2b04      	cmp	r3, #4
20000bb8:	d102      	bne.n	20000bc0 <HPDMA_Complete_IRQHandler+0x60>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:323
    {
        g_hpdma_current_desc = 0u;
20000bba:	4b23      	ldr	r3, [pc, #140]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000bbc:	2200      	movs	r2, #0
20000bbe:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:326
    } 
    
    if(g_transfer.xfr_size > 0u)
20000bc0:	4b23      	ldr	r3, [pc, #140]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000bc2:	691b      	ldr	r3, [r3, #16]
20000bc4:	2b00      	cmp	r3, #0
20000bc6:	d017      	beq.n	20000bf8 <HPDMA_Complete_IRQHandler+0x98>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:328
    {
        if(NO_OF_HPDMA_DESCRIPTORS == g_hpdma_end_desc)
20000bc8:	4b22      	ldr	r3, [pc, #136]	; (20000c54 <HPDMA_Complete_IRQHandler+0xf4>)
20000bca:	681b      	ldr	r3, [r3, #0]
20000bcc:	2b04      	cmp	r3, #4
20000bce:	d103      	bne.n	20000bd8 <HPDMA_Complete_IRQHandler+0x78>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:330
        {
            g_hpdma_end_desc = 0u;
20000bd0:	4b20      	ldr	r3, [pc, #128]	; (20000c54 <HPDMA_Complete_IRQHandler+0xf4>)
20000bd2:	2200      	movs	r2, #0
20000bd4:	601a      	str	r2, [r3, #0]
20000bd6:	e004      	b.n	20000be2 <HPDMA_Complete_IRQHandler+0x82>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:334
        }
        else
        {
            ++g_hpdma_end_desc;
20000bd8:	4b1e      	ldr	r3, [pc, #120]	; (20000c54 <HPDMA_Complete_IRQHandler+0xf4>)
20000bda:	681b      	ldr	r3, [r3, #0]
20000bdc:	3301      	adds	r3, #1
20000bde:	4a1d      	ldr	r2, [pc, #116]	; (20000c54 <HPDMA_Complete_IRQHandler+0xf4>)
20000be0:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:336
        }
        start_transfer(g_transfer.src_addr,
20000be2:	4b1b      	ldr	r3, [pc, #108]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000be4:	6898      	ldr	r0, [r3, #8]
20000be6:	4b1a      	ldr	r3, [pc, #104]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000be8:	68d9      	ldr	r1, [r3, #12]
20000bea:	4b19      	ldr	r3, [pc, #100]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000bec:	691a      	ldr	r2, [r3, #16]
20000bee:	4b18      	ldr	r3, [pc, #96]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000bf0:	7d1b      	ldrb	r3, [r3, #20]
20000bf2:	f7ff ff0b 	bl	20000a0c <start_transfer>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:355
            {
                (*(g_transfer.completion_handler))(HPDMA_COMPLETED);
            }  
        }
    }
}
20000bf6:	e01e      	b.n	20000c36 <HPDMA_Complete_IRQHandler+0xd6>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:343
        if(((HPDMA->Descriptor[g_hpdma_current_desc].HPDMACR_REG) & HPDMACR_ALL_IRQ_ENABLE_MASK) == 0u)  
20000bf8:	4914      	ldr	r1, [pc, #80]	; (20000c4c <HPDMA_Complete_IRQHandler+0xec>)
20000bfa:	4b13      	ldr	r3, [pc, #76]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000bfc:	681a      	ldr	r2, [r3, #0]
20000bfe:	4613      	mov	r3, r2
20000c00:	009b      	lsls	r3, r3, #2
20000c02:	4413      	add	r3, r2
20000c04:	009b      	lsls	r3, r3, #2
20000c06:	440b      	add	r3, r1
20000c08:	330c      	adds	r3, #12
20000c0a:	681b      	ldr	r3, [r3, #0]
20000c0c:	f403 03e0 	and.w	r3, r3, #7340032	; 0x700000
20000c10:	2b00      	cmp	r3, #0
20000c12:	d110      	bne.n	20000c36 <HPDMA_Complete_IRQHandler+0xd6>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:345
            g_hpdma_current_desc = 0u;
20000c14:	4b0c      	ldr	r3, [pc, #48]	; (20000c48 <HPDMA_Complete_IRQHandler+0xe8>)
20000c16:	2200      	movs	r2, #0
20000c18:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:346
            g_hpdma_end_desc = 0u;
20000c1a:	4b0e      	ldr	r3, [pc, #56]	; (20000c54 <HPDMA_Complete_IRQHandler+0xf4>)
20000c1c:	2200      	movs	r2, #0
20000c1e:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:348
            g_transfer.state = HPDMA_COMPLETED;
20000c20:	4b0b      	ldr	r3, [pc, #44]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000c22:	2201      	movs	r2, #1
20000c24:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:349
            if(g_transfer.completion_handler != NULL_HANDLER)
20000c26:	4b0a      	ldr	r3, [pc, #40]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000c28:	685b      	ldr	r3, [r3, #4]
20000c2a:	2b00      	cmp	r3, #0
20000c2c:	d003      	beq.n	20000c36 <HPDMA_Complete_IRQHandler+0xd6>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:351
                (*(g_transfer.completion_handler))(HPDMA_COMPLETED);
20000c2e:	4b08      	ldr	r3, [pc, #32]	; (20000c50 <HPDMA_Complete_IRQHandler+0xf0>)
20000c30:	685b      	ldr	r3, [r3, #4]
20000c32:	2001      	movs	r0, #1
20000c34:	4798      	blx	r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:355
}
20000c36:	bf00      	nop
20000c38:	46bd      	mov	sp, r7
20000c3a:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
20000c3e:	4685      	mov	sp, r0
20000c40:	4770      	bx	lr
20000c42:	bf00      	nop
20000c44:	42280000 	.word	0x42280000
20000c48:	20000f44 	.word	0x20000f44
20000c4c:	40014000 	.word	0x40014000
20000c50:	20000f28 	.word	0x20000f28
20000c54:	20000f40 	.word	0x20000f40

20000c58 <HPDMA_Error_IRQHandler>:
HPDMA_Error_IRQHandler():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:367
#if defined(__GNUC__)
__attribute__((__interrupt__)) void HPDMA_Error_IRQHandler(void)
#else
void HPDMA_Error_IRQHandler(void)
#endif 
{
20000c58:	4668      	mov	r0, sp
20000c5a:	f020 0107 	bic.w	r1, r0, #7
20000c5e:	468d      	mov	sp, r1
20000c60:	b581      	push	{r0, r7, lr}
20000c62:	b083      	sub	sp, #12
20000c64:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:374
    uint32_t inc;

    /*
     * Handle source/destination errors.
     */
    error_bits = HPDMA->HPDMAEDR_REG;
20000c66:	4b39      	ldr	r3, [pc, #228]	; (20000d4c <HPDMA_Error_IRQHandler+0xf4>)
20000c68:	681b      	ldr	r3, [r3, #0]
20000c6a:	603b      	str	r3, [r7, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:375
    error_bits = error_bits & HPDMAEDR_DCP_ERR_MASK;
20000c6c:	683b      	ldr	r3, [r7, #0]
20000c6e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
20000c72:	603b      	str	r3, [r7, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:377
    
    if(error_bits != 0u)
20000c74:	683b      	ldr	r3, [r7, #0]
20000c76:	2b00      	cmp	r3, #0
20000c78:	d02f      	beq.n	20000cda <HPDMA_Error_IRQHandler+0x82>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:379
    {
        if(HPDMA_BITBAND->Descriptor[g_hpdma_current_desc].HPDMASR_DCP_SERR != 0u)
20000c7a:	4935      	ldr	r1, [pc, #212]	; (20000d50 <HPDMA_Error_IRQHandler+0xf8>)
20000c7c:	4b35      	ldr	r3, [pc, #212]	; (20000d54 <HPDMA_Error_IRQHandler+0xfc>)
20000c7e:	681a      	ldr	r2, [r3, #0]
20000c80:	4613      	mov	r3, r2
20000c82:	009b      	lsls	r3, r3, #2
20000c84:	4413      	add	r3, r2
20000c86:	01db      	lsls	r3, r3, #7
20000c88:	440b      	add	r3, r1
20000c8a:	f503 7302 	add.w	r3, r3, #520	; 0x208
20000c8e:	681b      	ldr	r3, [r3, #0]
20000c90:	2b00      	cmp	r3, #0
20000c92:	d00a      	beq.n	20000caa <HPDMA_Error_IRQHandler+0x52>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:381
        {
            g_transfer.state = HPDMA_SOURCE_ERROR;
20000c94:	4b30      	ldr	r3, [pc, #192]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000c96:	2202      	movs	r2, #2
20000c98:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:382
            if(g_transfer.completion_handler != NULL_HANDLER)
20000c9a:	4b2f      	ldr	r3, [pc, #188]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000c9c:	685b      	ldr	r3, [r3, #4]
20000c9e:	2b00      	cmp	r3, #0
20000ca0:	d003      	beq.n	20000caa <HPDMA_Error_IRQHandler+0x52>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:384
            {                        
                (*(g_transfer.completion_handler))(HPDMA_SOURCE_ERROR);
20000ca2:	4b2d      	ldr	r3, [pc, #180]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000ca4:	685b      	ldr	r3, [r3, #4]
20000ca6:	2002      	movs	r0, #2
20000ca8:	4798      	blx	r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:388
            }
        }
        
        if(HPDMA_BITBAND->Descriptor[g_hpdma_current_desc].HPDMASR_DCP_DERR != 0u)
20000caa:	4929      	ldr	r1, [pc, #164]	; (20000d50 <HPDMA_Error_IRQHandler+0xf8>)
20000cac:	4b29      	ldr	r3, [pc, #164]	; (20000d54 <HPDMA_Error_IRQHandler+0xfc>)
20000cae:	681a      	ldr	r2, [r3, #0]
20000cb0:	4613      	mov	r3, r2
20000cb2:	009b      	lsls	r3, r3, #2
20000cb4:	4413      	add	r3, r2
20000cb6:	01db      	lsls	r3, r3, #7
20000cb8:	440b      	add	r3, r1
20000cba:	f503 7303 	add.w	r3, r3, #524	; 0x20c
20000cbe:	681b      	ldr	r3, [r3, #0]
20000cc0:	2b00      	cmp	r3, #0
20000cc2:	d00a      	beq.n	20000cda <HPDMA_Error_IRQHandler+0x82>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:390
        {
            g_transfer.state = HPDMA_DESTINATION_ERROR;
20000cc4:	4b24      	ldr	r3, [pc, #144]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000cc6:	2203      	movs	r2, #3
20000cc8:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:391
            if(g_transfer.completion_handler != NULL_HANDLER)
20000cca:	4b23      	ldr	r3, [pc, #140]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000ccc:	685b      	ldr	r3, [r3, #4]
20000cce:	2b00      	cmp	r3, #0
20000cd0:	d003      	beq.n	20000cda <HPDMA_Error_IRQHandler+0x82>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:393
            {                        
                (*(g_transfer.completion_handler))(HPDMA_DESTINATION_ERROR);
20000cd2:	4b21      	ldr	r3, [pc, #132]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000cd4:	685b      	ldr	r3, [r3, #4]
20000cd6:	2003      	movs	r0, #3
20000cd8:	4798      	blx	r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:401
    }
    
    /*
     * Handle non word aligned errors.
     */
    error_bits = HPDMA->HPDMAEDR_REG;
20000cda:	4b1c      	ldr	r3, [pc, #112]	; (20000d4c <HPDMA_Error_IRQHandler+0xf4>)
20000cdc:	681b      	ldr	r3, [r3, #0]
20000cde:	603b      	str	r3, [r7, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:402
    error_bits = error_bits & HPDMAEDR_NON_WORD_ERR_MASK;
20000ce0:	683b      	ldr	r3, [r7, #0]
20000ce2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
20000ce6:	603b      	str	r3, [r7, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:404
    
    if(error_bits != 0u)
20000ce8:	683b      	ldr	r3, [r7, #0]
20000cea:	2b00      	cmp	r3, #0
20000cec:	d00a      	beq.n	20000d04 <HPDMA_Error_IRQHandler+0xac>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:406
    {
        g_transfer.state = HPDMA_WORD_ALIGN_ERROR;
20000cee:	4b1a      	ldr	r3, [pc, #104]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000cf0:	2204      	movs	r2, #4
20000cf2:	701a      	strb	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:408
        /* Call handler. */
        if(g_transfer.completion_handler != NULL_HANDLER)
20000cf4:	4b18      	ldr	r3, [pc, #96]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000cf6:	685b      	ldr	r3, [r3, #4]
20000cf8:	2b00      	cmp	r3, #0
20000cfa:	d003      	beq.n	20000d04 <HPDMA_Error_IRQHandler+0xac>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:410
        {
            (*(g_transfer.completion_handler))(HPDMA_WORD_ALIGN_ERROR);
20000cfc:	4b16      	ldr	r3, [pc, #88]	; (20000d58 <HPDMA_Error_IRQHandler+0x100>)
20000cfe:	685b      	ldr	r3, [r3, #4]
20000d00:	2004      	movs	r0, #4
20000d02:	4798      	blx	r3
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:414
        }
    }
    
    for(inc = 0u; inc < NO_OF_HPDMA_DESCRIPTORS; inc++)
20000d04:	2300      	movs	r3, #0
20000d06:	607b      	str	r3, [r7, #4]
20000d08:	e014      	b.n	20000d34 <HPDMA_Error_IRQHandler+0xdc>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:417 (discriminator 3)
    {
        /* Abort transfer. */
        HPDMA_BITBAND->Descriptor[inc].HPDMACR_DCP_CLR = HPDMA_ENABLE;
20000d0a:	4911      	ldr	r1, [pc, #68]	; (20000d50 <HPDMA_Error_IRQHandler+0xf8>)
20000d0c:	687a      	ldr	r2, [r7, #4]
20000d0e:	4613      	mov	r3, r2
20000d10:	009b      	lsls	r3, r3, #2
20000d12:	4413      	add	r3, r2
20000d14:	01db      	lsls	r3, r3, #7
20000d16:	440b      	add	r3, r1
20000d18:	f503 73e4 	add.w	r3, r3, #456	; 0x1c8
20000d1c:	2201      	movs	r2, #1
20000d1e:	601a      	str	r2, [r3, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:419 (discriminator 3)
        /* Clear interrupt. */
        HPDMA_BITBAND->HPDMAICR_CLR_XFR_INT[inc] = HPDMA_ENABLE;
20000d20:	4a0b      	ldr	r2, [pc, #44]	; (20000d50 <HPDMA_Error_IRQHandler+0xf8>)
20000d22:	687b      	ldr	r3, [r7, #4]
20000d24:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
20000d28:	2101      	movs	r1, #1
20000d2a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:414 (discriminator 3)
    for(inc = 0u; inc < NO_OF_HPDMA_DESCRIPTORS; inc++)
20000d2e:	687b      	ldr	r3, [r7, #4]
20000d30:	3301      	adds	r3, #1
20000d32:	607b      	str	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:414 (discriminator 1)
20000d34:	687b      	ldr	r3, [r7, #4]
20000d36:	2b03      	cmp	r3, #3
20000d38:	d9e7      	bls.n	20000d0a <HPDMA_Error_IRQHandler+0xb2>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/drivers/mss_hpdma/mss_hpdma.c:421
    }
}
20000d3a:	bf00      	nop
20000d3c:	bf00      	nop
20000d3e:	370c      	adds	r7, #12
20000d40:	46bd      	mov	sp, r7
20000d42:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
20000d46:	4685      	mov	sp, r0
20000d48:	4770      	bx	lr
20000d4a:	bf00      	nop
20000d4c:	40014000 	.word	0x40014000
20000d50:	42280000 	.word	0x42280000
20000d54:	20000f44 	.word	0x20000f44
20000d58:	20000f28 	.word	0x20000f28

20000d5c <SystemInit>:
SystemInit():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:433

/***************************************************************************//**
 * See system_m2sxxx.h for details.
 */
void SystemInit(void)
{
20000d5c:	b580      	push	{r7, lr}
20000d5e:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:456
     */
#if (MSS_SYS_FACC_INIT_BY_CORTEX == 1)
    complete_clock_config();
#endif

    silicon_workarounds();
20000d60:	f000 f830 	bl	20000dc4 <silicon_workarounds>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:463
    /*--------------------------------------------------------------------------
     * Set STKALIGN to ensure exception stacking starts on 8 bytes address
     * boundary. This ensures compliance with the "Procedure Call Standards for
     * the ARM Architecture" (AAPCS).
     */
    SCB->CCR |= SCB_CCR_STKALIGN_Msk;
20000d64:	4b04      	ldr	r3, [pc, #16]	; (20000d78 <SystemInit+0x1c>)
20000d66:	695b      	ldr	r3, [r3, #20]
20000d68:	4a03      	ldr	r2, [pc, #12]	; (20000d78 <SystemInit+0x1c>)
20000d6a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
20000d6e:	6153      	str	r3, [r2, #20]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:492
#endif

    /*--------------------------------------------------------------------------
     * Call user defined configuration function.
     */
    mscc_post_hw_cfg_init();
20000d70:	f7ff fb60 	bl	20000434 <mscc_post_hw_cfg_init>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:539
    do
    {
        init_done = CORE_SF2_CFG->INIT_DONE & INIT_DONE_MASK;
    } while (0u == init_done);
#endif
}
20000d74:	bf00      	nop
20000d76:	bd80      	pop	{r7, pc}
20000d78:	e000ed00 	.word	0xe000ed00

20000d7c <get_silicon_revision>:
get_silicon_revision():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:916

/*------------------------------------------------------------------------------
  Retrieve silicon revision from system registers.
 */
static uint32_t get_silicon_revision(void)
{
20000d7c:	b480      	push	{r7}
20000d7e:	b083      	sub	sp, #12
20000d80:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:920
    uint32_t silicon_revision;
    uint32_t device_version;

    device_version = SYSREG->DEVICE_VERSION;
20000d82:	4b0e      	ldr	r3, [pc, #56]	; (20000dbc <get_silicon_revision+0x40>)
20000d84:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
20000d88:	603b      	str	r3, [r7, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:921
    switch(device_version)
20000d8a:	683b      	ldr	r3, [r7, #0]
20000d8c:	f64f 0202 	movw	r2, #63490	; 0xf802
20000d90:	4293      	cmp	r3, r2
20000d92:	d004      	beq.n	20000d9e <get_silicon_revision+0x22>
20000d94:	683b      	ldr	r3, [r7, #0]
20000d96:	4a0a      	ldr	r2, [pc, #40]	; (20000dc0 <get_silicon_revision+0x44>)
20000d98:	4293      	cmp	r3, r2
20000d9a:	d003      	beq.n	20000da4 <get_silicon_revision+0x28>
20000d9c:	e005      	b.n	20000daa <get_silicon_revision+0x2e>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:924
    {
        case 0x0000F802:
            silicon_revision = M2S050_REV_A_SILICON;
20000d9e:	2301      	movs	r3, #1
20000da0:	607b      	str	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:925
            break;
20000da2:	e005      	b.n	20000db0 <get_silicon_revision+0x34>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:928

        case 0x0001F802:
            silicon_revision = M2S050_REV_B_SILICON;
20000da4:	2302      	movs	r3, #2
20000da6:	607b      	str	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:929
            break;
20000da8:	e002      	b.n	20000db0 <get_silicon_revision+0x34>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:932

        default:
            silicon_revision = UNKNOWN_SILICON_REV;
20000daa:	2300      	movs	r3, #0
20000dac:	607b      	str	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:933
            break;
20000dae:	bf00      	nop
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:936
    }

    return silicon_revision;
20000db0:	687b      	ldr	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:937
}
20000db2:	4618      	mov	r0, r3
20000db4:	370c      	adds	r7, #12
20000db6:	46bd      	mov	sp, r7
20000db8:	bc80      	pop	{r7}
20000dba:	4770      	bx	lr
20000dbc:	40038000 	.word	0x40038000
20000dc0:	0001f802 	.word	0x0001f802

20000dc4 <silicon_workarounds>:
silicon_workarounds():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:943

/*------------------------------------------------------------------------------
  Workarounds for various silicon versions.
 */
static void silicon_workarounds(void)
{
20000dc4:	b580      	push	{r7, lr}
20000dc6:	b082      	sub	sp, #8
20000dc8:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:946
    uint32_t silicon_revision;

    silicon_revision = get_silicon_revision();
20000dca:	f7ff ffd7 	bl	20000d7c <get_silicon_revision>
20000dce:	6078      	str	r0, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:948

    switch(silicon_revision)
20000dd0:	687b      	ldr	r3, [r7, #4]
20000dd2:	2b01      	cmp	r3, #1
20000dd4:	d102      	bne.n	20000ddc <silicon_workarounds+0x18>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:951
    {
        case M2S050_REV_A_SILICON:
            m2s050_rev_a_workarounds();
20000dd6:	f000 f807 	bl	20000de8 <m2s050_rev_a_workarounds>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:952
            break;
20000dda:	e000      	b.n	20000dde <silicon_workarounds+0x1a>
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:959
        case M2S050_REV_B_SILICON:
            /* Fall through. */
        case UNKNOWN_SILICON_REV:
            /* Fall through. */
        default:
            break;
20000ddc:	bf00      	nop
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:961
    }
}
20000dde:	bf00      	nop
20000de0:	3708      	adds	r7, #8
20000de2:	46bd      	mov	sp, r7
20000de4:	bd80      	pop	{r7, pc}
	...

20000de8 <m2s050_rev_a_workarounds>:
m2s050_rev_a_workarounds():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:967

/*------------------------------------------------------------------------------
  Silicon workarounds for M2S050 rev A.
 */
static void m2s050_rev_a_workarounds(void)
{
20000de8:	b480      	push	{r7}
20000dea:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:972
    /*--------------------------------------------------------------------------
     * Work around a couple of silicon issues:
     */
    /* DDR_CLK_EN <- 1 */
    SYSREG->MSSDDR_FACC1_CR |= (uint32_t)1 << DDR_CLK_EN_SHIFT;
20000dec:	4b09      	ldr	r3, [pc, #36]	; (20000e14 <m2s050_rev_a_workarounds+0x2c>)
20000dee:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
20000df2:	4a08      	ldr	r2, [pc, #32]	; (20000e14 <m2s050_rev_a_workarounds+0x2c>)
20000df4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
20000df8:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:975

    /* CONTROLLER_PLL_INIT <- 0 */
    SYSREG->MSSDDR_FACC1_CR = SYSREG->MSSDDR_FACC1_CR & ~CONTROLLER_PLL_INIT_MASK;
20000dfc:	4b05      	ldr	r3, [pc, #20]	; (20000e14 <m2s050_rev_a_workarounds+0x2c>)
20000dfe:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
20000e02:	4a04      	ldr	r2, [pc, #16]	; (20000e14 <m2s050_rev_a_workarounds+0x2c>)
20000e04:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
20000e08:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../firmware/CMSIS/system_m2sxxx.c:976
}
20000e0c:	bf00      	nop
20000e0e:	46bd      	mov	sp, r7
20000e10:	bc80      	pop	{r7}
20000e12:	4770      	bx	lr
20000e14:	40038000 	.word	0x40038000

20000e18 <main>:
main():
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:174


    }
    return count;
}
int main(void){
20000e18:	b480      	push	{r7}
20000e1a:	b089      	sub	sp, #36	; 0x24
20000e1c:	af00      	add	r7, sp, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:219
    count12 = burstError(ENCODER, DECODER, 12, 32);

    */

       //CLC
       int num = 25;
20000e1e:	2319      	movs	r3, #25
20000e20:	61fb      	str	r3, [r7, #28]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:224
       int encoded_data1,encoded_data2;
       uint64_t encoded_data;
       int decoded_data;

       ENCODER->IN = num;
20000e22:	f04f 5240 	mov.w	r2, #805306368	; 0x30000000
20000e26:	69fb      	ldr	r3, [r7, #28]
20000e28:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:225
       encoded_data1 = ENCODER->OUT1;
20000e2a:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
20000e2e:	685b      	ldr	r3, [r3, #4]
20000e30:	61bb      	str	r3, [r7, #24]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:226
       encoded_data2 =  ENCODER->OUT2;
20000e32:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
20000e36:	689b      	ldr	r3, [r3, #8]
20000e38:	617b      	str	r3, [r7, #20]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:227
       encoded_data = encoded_data1 + (encoded_data2<<32);
20000e3a:	2220      	movs	r2, #32
20000e3c:	697b      	ldr	r3, [r7, #20]
20000e3e:	fa03 f202 	lsl.w	r2, r3, r2
20000e42:	69bb      	ldr	r3, [r7, #24]
20000e44:	4413      	add	r3, r2
20000e46:	461a      	mov	r2, r3
20000e48:	ea4f 73e2 	mov.w	r3, r2, asr #31
20000e4c:	e9c7 2302 	strd	r2, r3, [r7, #8]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:230


       DECODER->IN1 = encoded_data1;
20000e50:	4a07      	ldr	r2, [pc, #28]	; (20000e70 <main+0x58>)
20000e52:	69bb      	ldr	r3, [r7, #24]
20000e54:	6013      	str	r3, [r2, #0]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:231
       DECODER->IN2 = encoded_data2;
20000e56:	4a06      	ldr	r2, [pc, #24]	; (20000e70 <main+0x58>)
20000e58:	697b      	ldr	r3, [r7, #20]
20000e5a:	6053      	str	r3, [r2, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:232
       decoded_data = DECODER->OUT;
20000e5c:	4b04      	ldr	r3, [pc, #16]	; (20000e70 <main+0x58>)
20000e5e:	689b      	ldr	r3, [r3, #8]
20000e60:	607b      	str	r3, [r7, #4]
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:234

    return 0;
20000e62:	2300      	movs	r3, #0
C:\Users\Lesc\Documents\SoftConsoleProjects\test_github\Debug/../main.c:235
}
20000e64:	4618      	mov	r0, r3
20000e66:	3724      	adds	r7, #36	; 0x24
20000e68:	46bd      	mov	sp, r7
20000e6a:	bc80      	pop	{r7}
20000e6c:	4770      	bx	lr
20000e6e:	bf00      	nop
20000e70:	30001000 	.word	0x30001000

20000e74 <__libc_init_array>:
__libc_init_array():
20000e74:	b570      	push	{r4, r5, r6, lr}
20000e76:	2600      	movs	r6, #0
20000e78:	4d0c      	ldr	r5, [pc, #48]	; (20000eac <__libc_init_array+0x38>)
20000e7a:	4c0d      	ldr	r4, [pc, #52]	; (20000eb0 <__libc_init_array+0x3c>)
20000e7c:	1b64      	subs	r4, r4, r5
20000e7e:	10a4      	asrs	r4, r4, #2
20000e80:	42a6      	cmp	r6, r4
20000e82:	d109      	bne.n	20000e98 <__libc_init_array+0x24>
20000e84:	f000 f81a 	bl	20000ebc <_init>
20000e88:	2600      	movs	r6, #0
20000e8a:	4d0a      	ldr	r5, [pc, #40]	; (20000eb4 <__libc_init_array+0x40>)
20000e8c:	4c0a      	ldr	r4, [pc, #40]	; (20000eb8 <__libc_init_array+0x44>)
20000e8e:	1b64      	subs	r4, r4, r5
20000e90:	10a4      	asrs	r4, r4, #2
20000e92:	42a6      	cmp	r6, r4
20000e94:	d105      	bne.n	20000ea2 <__libc_init_array+0x2e>
20000e96:	bd70      	pop	{r4, r5, r6, pc}
20000e98:	f855 3b04 	ldr.w	r3, [r5], #4
20000e9c:	4798      	blx	r3
20000e9e:	3601      	adds	r6, #1
20000ea0:	e7ee      	b.n	20000e80 <__libc_init_array+0xc>
20000ea2:	f855 3b04 	ldr.w	r3, [r5], #4
20000ea6:	4798      	blx	r3
20000ea8:	3601      	adds	r6, #1
20000eaa:	e7f2      	b.n	20000e92 <__libc_init_array+0x1e>
20000eac:	20000ed4 	.word	0x20000ed4
20000eb0:	20000ed4 	.word	0x20000ed4
20000eb4:	20000ed4 	.word	0x20000ed4
20000eb8:	20000ed8 	.word	0x20000ed8

20000ebc <_init>:
_init():
20000ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20000ebe:	bf00      	nop
20000ec0:	bcf8      	pop	{r3, r4, r5, r6, r7}
20000ec2:	bc08      	pop	{r3}
20000ec4:	469e      	mov	lr, r3
20000ec6:	4770      	bx	lr

20000ec8 <_fini>:
_fini():
20000ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20000eca:	bf00      	nop
20000ecc:	bcf8      	pop	{r3, r4, r5, r6, r7}
20000ece:	bc08      	pop	{r3}
20000ed0:	469e      	mov	lr, r3
20000ed2:	4770      	bx	lr

20000ed4 <__frame_dummy_init_array_entry>:
__preinit_array_start():
20000ed4:	04d5 2000                                   ... 

20000ed8 <__do_global_dtors_aux_fini_array_entry>:
__init_array_end():
20000ed8:	04b1 2000 0000 0000                         ... ....
